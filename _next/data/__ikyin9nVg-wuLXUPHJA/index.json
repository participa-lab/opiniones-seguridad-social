{"pageProps":{"result":{"clusters":[{"cluster":"Políticas de Apoyo a la Clase Media","cluster_id":"2","takeaways":"Los participantes abogan por políticas públicas que incentiven a la clase media a tener hijos, incluyendo exoneraciones tributarias. También se discute la necesidad de una jubilación a los 60 años, aunque se cuestiona su viabilidad debido al aumento de la esperanza de vida y la precariedad laboral, especialmente para mujeres.\n\nSe enfatiza la importancia de considerar la perspectiva de género en las pensiones y la necesidad de que la jubilación dependa de los aportes realizados. Además, se propone una renta básica universal y se critica la injusticia del límite de 60 años, sugiriendo que la edad de jubilación debería adaptarse a las realidades laborales y demográficas actuales.","arguments":[{"arg_id":"A157_0","argument":"Es necesario abordar el tema de las jubilaciones, ya que el sistema anterior no es viable con el actual porcentaje de activos y pasivos.","comment_id":"157","x":10.074766,"y":14.75535,"p":1},{"arg_id":"A103_0","argument":"Es necesario incentivar a la clase media a tener hijos mediante políticas públicas.","comment_id":"103","x":9.38663,"y":14.772444,"p":1},{"arg_id":"A103_1","argument":"Se deben implementar exoneraciones tributarias para apoyar a la clase media en la crianza de hijos a largo plazo.","comment_id":"103","x":9.502965,"y":14.883466,"p":1},{"arg_id":"A88_0","argument":"Las personas deben beneficiarse de los incrementos de productividad.","comment_id":"88","x":9.537008,"y":14.219296,"p":1},{"arg_id":"A88_1","argument":"Existen diferencias de esperanza de vida según trabajos y clase.","comment_id":"88","x":11.105215,"y":13.998887,"p":1},{"arg_id":"A39_0","argument":"Establecer la edad jubilatoria a los 60 años en la Constitución es contrario a la evidencia sobre el aumento de la esperanza de vida.","comment_id":"39","x":11.828414,"y":14.034389,"p":1},{"arg_id":"A36_0","argument":"A los 60 años, la jubilación no garantiza acceso, especialmente para las personas precarizadas y las mujeres, que a menudo no alcanzan los 30 años de aportes.","comment_id":"36","x":11.410187,"y":14.422323,"p":1},{"arg_id":"A95_0","argument":"La aceleración digital está cambiando el paradigma y es necesario diseñar nuevos escenarios de vida desvinculados del trabajo.","comment_id":"95","x":10.732093,"y":14.119249,"p":1},{"arg_id":"A229_0","argument":"Atar la jubilación mínima al SMN definido por el gobierno es contraproducente.","comment_id":"229","x":11.848484,"y":13.631828,"p":1},{"arg_id":"A229_1","argument":"Esto podría resultar en jubilaciones y salarios sumergidos.","comment_id":"229","x":10.322942,"y":13.915317,"p":0.9976478070823904},{"arg_id":"A11_0","argument":"Es necesario asegurar la posibilidad de jubilarse a los 60 años.","comment_id":"11","x":11.423647,"y":14.889046,"p":1},{"arg_id":"A11_1","argument":"La jubilación a los 60 años es un derecho.","comment_id":"11","x":12.095622,"y":14.52826,"p":1},{"arg_id":"A126_0","argument":"La edad mínima para ocupar cargos públicos, incluidos legisladores y presidentes, debería ser de 60 años.","comment_id":"126","x":12.004649,"y":14.688867,"p":1},{"arg_id":"A133_0","argument":"Los hombres tienen una media de 6 años menos de esperanza de vida y deberían jubilarse antes.","comment_id":"133","x":11.562639,"y":13.984424,"p":1},{"arg_id":"A133_1","argument":"Es urgente considerar la perspectiva de género, ya que muchos hombres mueren pronto.","comment_id":"133","x":10.886602,"y":13.640368,"p":0.8373191852189434},{"arg_id":"A112_0","argument":"A partir de los 60, se debería permitir elegir cuándo jubilarse.","comment_id":"112","x":11.830548,"y":14.801105,"p":1},{"arg_id":"A112_1","argument":"Hay profesiones en las que a los 55 años ya no se está en condiciones de seguir trabajando.","comment_id":"112","x":11.64954,"y":14.45234,"p":1},{"arg_id":"A82_0","argument":"Es importante considerar la perspectiva de género en las prestaciones, ya que las mujeres tienen menor cobertura y beneficios si se basan en la historia laboral-salarial.","comment_id":"82","x":10.777832,"y":13.560324,"p":0},{"arg_id":"A13_1","argument":"Si una persona recibe múltiples prestaciones, podría haber injusticias al cobrar por cada una.","comment_id":"13","x":10.403691,"y":13.779608,"p":0},{"arg_id":"A10_0","argument":"La edad de jubilación debe estar relacionada con el tipo de trabajo que realizan las personas.","comment_id":"10","x":10.9686985,"y":14.662527,"p":0.8159851631706421},{"arg_id":"A75_1","argument":"Apoyo la implementación de una renta básica universal por edad avanzada y crianza.","comment_id":"75","x":9.646295,"y":15.05069,"p":1},{"arg_id":"A99_0","argument":"La jubilación debe depender de los aportes realizados, no solo de la edad o necesidades.","comment_id":"99","x":10.577672,"y":14.535699,"p":1},{"arg_id":"A99_1","argument":"Quien no aportó no debe recibir jubilación.","comment_id":"99","x":10.4695015,"y":14.323569,"p":1},{"arg_id":"A24_0","argument":"El límite de 60 años beneficia a la Caja militar, notarial, bancaria y profesional, lo cual no es justo.","comment_id":"24","x":12.235327,"y":14.254211,"p":1},{"arg_id":"A43_0","argument":"En sociedades envejecidas, es conveniente que parte de la jubilación provenga del ahorro previo individual.","comment_id":"43","x":10.534271,"y":14.503206,"p":1},{"arg_id":"A94_0","argument":"Una persona de 65 años que cuida a sus nietos contribuye más a la seguridad social que si trabajara para aumentar el capital de empresarios millonarios.","comment_id":"94","x":9.725388,"y":13.53645,"p":1},{"arg_id":"A115_0","argument":"Es necesario asegurar una pensión o jubilación acorde a los costos de vida del país.","comment_id":"115","x":10.278687,"y":14.930657,"p":1},{"arg_id":"A115_1","argument":"Las personas deben tener acceso a su medicación y disfrutar de una mejor calidad de vida.","comment_id":"115","x":8.966873,"y":14.524135,"p":1},{"arg_id":"A300_0","argument":"Para que la juventud tenga oportunidades laborales, es lógico establecer la jubilación a los 60 años.","comment_id":"300","x":11.734937,"y":14.703083,"p":1},{"arg_id":"A93_1","argument":"Es injusto hacer trabajar 5 años más y cobrar menos.","comment_id":"93","x":11.352756,"y":13.582261,"p":0},{"arg_id":"A93_2","argument":"Deberíamos gravar el capital.","comment_id":"93","x":9.510945,"y":14.469449,"p":1},{"arg_id":"A107_0","argument":"Es hora de legislar para que los aportes de los que más ganan sean mayores.","comment_id":"107","x":9.971548,"y":14.535655,"p":1},{"arg_id":"A107_1","argument":"Las jubilaciones deben beneficiar a la clase trabajadora.","comment_id":"107","x":10.258239,"y":14.604401,"p":1},{"arg_id":"A42_0","argument":"En una población envejecida, con mayor esperanza de vida y menos nacimientos, será difícil pagar jubilaciones dignas sin aumentar la edad de jubilación.","comment_id":"42","x":11.102981,"y":14.208939,"p":1},{"arg_id":"A143_0","argument":"Incluir la edad jubilatoria en la constitución es irresponsable.","comment_id":"143","x":12.056848,"y":13.873847,"p":1},{"arg_id":"A64_0","argument":"Todos queremos trabajar menos y ganar más, pero la longevidad plantea desafíos para pagar jubilaciones y seguro médico.","comment_id":"64","x":10.983255,"y":14.491624,"p":1},{"arg_id":"A80_1","argument":"Es necesario gravar los capitales para promover la sostenibilidad.","comment_id":"80","x":9.438044,"y":14.476523,"p":1},{"arg_id":"A176_0","argument":"Es necesario discutir y repensar cómo garantizar una jubilación que evite la pobreza en la vejez.","comment_id":"176","x":9.907211,"y":14.958733,"p":1},{"arg_id":"A44_0","argument":"La edad de jubilación no debe establecerse en la Constitución.","comment_id":"44","x":12.0342045,"y":14.095633,"p":1},{"arg_id":"A193_0","argument":"Las jubilaciones y pensiones no deberían ser menores que el salario mínimo, ya que este es lo mínimo necesario para vivir.","comment_id":"193","x":10.580295,"y":14.786632,"p":1},{"arg_id":"A200_0","argument":"A los 60 años, cumplimos nuestro ciclo laboral, pero quienes quieran y puedan seguir trabajando deberían tener esa opción.","comment_id":"200","x":11.591482,"y":14.863653,"p":1},{"arg_id":"A35_1","argument":"El 90% de las personas ha cobrado un promedio de $5,000.","comment_id":"35","x":9.833965,"y":13.276114,"p":1},{"arg_id":"A168_1","argument":"Depender solo de los aportes realizados ignora esta realidad.","comment_id":"168","x":10.099087,"y":12.968514,"p":0},{"arg_id":"A41_1","argument":"Es necesario favorecer el ingreso de las nuevas generaciones al mercado de trabajo para financiar la seguridad social.","comment_id":"41","x":9.108135,"y":13.994392,"p":0},{"arg_id":"A173_1","argument":"Es necesario enfocar los recursos del estado en la infancia y adolescencia.","comment_id":"173","x":8.9592085,"y":14.7997465,"p":0.8896227035999598},{"arg_id":"A308_0","argument":"La estructura demográfica actual no puede sostener una jubilación a los 60 años.","comment_id":"308","x":11.912978,"y":13.932258,"p":1},{"arg_id":"A206_1","argument":"La cuestión fundamental es: ¿quién lo paga?","comment_id":"206","x":9.79074,"y":14.135115,"p":1},{"arg_id":"A19_0","argument":"Se propone aumentar la edad de jubilación a 65 años, pero muchos trabajadores no pueden acceder o permanecer en el mercado laboral hasta esa edad.","comment_id":"19","x":11.50086,"y":14.444713,"p":1},{"arg_id":"A146_0","argument":"La esperanza de vida varía según el quintil de la población.","comment_id":"146","x":11.236432,"y":14.06357,"p":1},{"arg_id":"A84_0","argument":"El aumento de la esperanza de vida no debe llevar a aumentar la edad de jubilación.","comment_id":"84","x":11.41449,"y":14.239538,"p":1},{"arg_id":"A84_1","argument":"El aumento de la esperanza de vida también incrementa la productividad y la automatización.","comment_id":"84","x":10.990653,"y":14.023864,"p":1},{"arg_id":"A98_0","argument":"Si no ponemos un freno, pronto querrán que nos jubilemos a los 70.","comment_id":"98","x":11.837969,"y":14.991996,"p":1},{"arg_id":"A33_0","argument":"Los mayores problemas sociales no se dan en las personas mayores, donde la pobreza es inferior al 2%.","comment_id":"33","x":10.126515,"y":13.4267435,"p":0.7912555914966088},{"arg_id":"A134_1","argument":"No debería haber un costo para quienes aportan.","comment_id":"134","x":10.084938,"y":14.148935,"p":0.9976478070823904},{"arg_id":"A185_0","argument":"La edad por sector es aceptable.","comment_id":"185","x":11.60977,"y":14.784624,"p":1},{"arg_id":"A53_0","argument":"La capacidad de ahorro o nivel de ingresos de las personas aumenta su capacidad de contribuir con impuestos para solucionar problemas sociales.","comment_id":"53","x":9.667824,"y":13.633227,"p":0.8354334574893443}]},{"cluster":"Perspectiva Integral sobre Seguridad Social","cluster_id":"1","takeaways":"Los participantes expresaron preocupaciones sobre el plebiscito, argumentando que podría limitar la capacidad del Estado para abordar problemas prioritarios y consolidar privilegios de ciertos grupos. Se destacó la necesidad de una propuesta inclusiva que contemple a todos los sectores sociales y que no se enfoque únicamente en la reforma jubilatoria.\n\nAdemás, se cuestionó la efectividad del plebiscito como solución, sugiriendo que no aborda una reforma integral de la seguridad social y que podría tener efectos negativos en el mercado laboral. Muchos abogaron por una administración eficiente del sistema y la necesidad de complementar políticas con cuidados y sanitarias para lograr cambios significativos.","arguments":[{"arg_id":"A78_0","argument":"Debería considerarse un sistema de protección social, ya que esta perspectiva es más integral y no está en el plebiscito ni en la reforma actual.","comment_id":"78","x":8.314565,"y":13.603498,"p":0},{"arg_id":"A174_0","argument":"Los partidos deben tomar una posición clara sobre temas importantes si tienen un programa.","comment_id":"174","x":6.593099,"y":14.322667,"p":1},{"arg_id":"A174_1","argument":"No es serio permitir libertad de acción en cuestiones cruciales.","comment_id":"174","x":6.1935477,"y":13.8926,"p":0.6863094182258478},{"arg_id":"A5_0","argument":"El plebiscito compromete la capacidad del Estado para destinar recursos a otras políticas prioritarias.","comment_id":"5","x":5.8529844,"y":13.317924,"p":1},{"arg_id":"A59_0","argument":"Se necesita una propuesta inclusiva que aborde el problema y contemple a todos los sectores sociales.","comment_id":"59","x":8.039843,"y":14.462304,"p":0},{"arg_id":"A101_0","argument":"Se debe realizar un debate profundo entre políticos, académicos y la sociedad civil sobre cualquier ley.","comment_id":"101","x":7.173128,"y":14.323019,"p":0},{"arg_id":"A101_1","argument":"La Caja Militar debe ser revisada.","comment_id":"101","x":6.2500987,"y":13.181913,"p":0},{"arg_id":"A62_0","argument":"La reforma de la seguridad recientemente aprobada castiga a los trabajadores.","comment_id":"62","x":8.802711,"y":12.399621,"p":1},{"arg_id":"A62_1","argument":"Se debe consensuar una salida que involucre a todos los afectados.","comment_id":"62","x":7.6712375,"y":14.364532,"p":0},{"arg_id":"A230_0","argument":"El plebiscito consolida privilegios de algunos grupos, como la Caja Militar, al imposibilitar la revisión de inequidades.","comment_id":"230","x":6.054888,"y":13.300167,"p":1},{"arg_id":"A132_0","argument":"La reforma no solucionó todos los problemas, pero derogarla tampoco será la solución.","comment_id":"132","x":6.7298865,"y":13.074707,"p":0.8119247840221699},{"arg_id":"A85_1","argument":"Este plebiscito es una oportunidad para informar a la ciudadanía.","comment_id":"85","x":5.585071,"y":13.923808,"p":0.6583251268097715},{"arg_id":"A76_0","argument":"Las acusaciones de inviabilidad de la reforma pueden basarse en supuestos económicos ortodoxos que deben ser revisados.","comment_id":"76","x":6.9261436,"y":13.436916,"p":0.8438780144622117},{"arg_id":"A14_0","argument":"El plebiscito propone restablecer derechos perdidos en la última regulación sobre la seguridad social.","comment_id":"14","x":7.6169977,"y":13.208487,"p":0},{"arg_id":"A74_0","argument":"Si se realiza el plebiscito, es necesario discutir y reglamentar la seguridad social para todos.","comment_id":"74","x":7.907378,"y":13.839156,"p":0},{"arg_id":"A74_1","argument":"La seguridad social es una forma de distribuir mejor la riqueza.","comment_id":"74","x":9.063123,"y":13.396448,"p":1},{"arg_id":"A124_0","argument":"El plebiscito no considera los cambios en el mercado laboral.","comment_id":"124","x":5.6747923,"y":12.910568,"p":1},{"arg_id":"A124_1","argument":"El plebiscito no toma en cuenta la baja natalidad, lo que resulta en menos personas aportando.","comment_id":"124","x":5.5544267,"y":12.815903,"p":0.741983927004316},{"arg_id":"A13_0","argument":"El plebiscito propone el cobro del salario mínimo por cada prestación social.","comment_id":"13","x":7.811796,"y":13.142223,"p":0},{"arg_id":"A108_0","argument":"No estoy de acuerdo con incluir estos temas en la constitución.","comment_id":"108","x":6.452917,"y":13.77482,"p":0.8093731636888122},{"arg_id":"A81_0","argument":"No se solucionará nada sin mejorar el acceso al mercado laboral para los jóvenes.","comment_id":"81","x":8.8454485,"y":14.056226,"p":0.7313471194569741},{"arg_id":"A142_0","argument":"No estoy seguro de que el plebiscito sea la solución.","comment_id":"142","x":5.5504084,"y":13.346121,"p":1},{"arg_id":"A142_1","argument":"La última reforma es mala, al igual que la que creó las AFPs.","comment_id":"142","x":8.536197,"y":11.439077,"p":0.4515370929269745},{"arg_id":"A142_2","argument":"No se puede lucrar con la seguridad social.","comment_id":"142","x":8.524167,"y":12.723877,"p":0.6956593399062566},{"arg_id":"A75_0","argument":"Estoy de acuerdo con una reforma previsional sin exoneraciones patronales.","comment_id":"75","x":8.491105,"y":12.034068,"p":0.9238652778129228},{"arg_id":"A114_0","argument":"Los impuestos no son mis enemigos; una buena administración los utiliza para el bien común.","comment_id":"114","x":9.418939,"y":11.870418,"p":1},{"arg_id":"A114_1","argument":"Prefiero altos impuestos y altas ganancias.","comment_id":"114","x":9.579703,"y":11.910452,"p":1},{"arg_id":"A97_0","argument":"Esta reforma es una medida socialista que busca soluciones temporales en lugar de sostenibles.","comment_id":"97","x":7.0650706,"y":12.956059,"p":0.8404412846584023},{"arg_id":"A57_0","argument":"El plebiscito no resuelve el déficit del Estado relacionado con la caja militar y policial.","comment_id":"57","x":5.7129116,"y":13.070531,"p":1},{"arg_id":"A57_1","argument":"El plebiscito no aborda problemas de otros sistemas corporativos, como las cajas profesionales.","comment_id":"57","x":5.4491034,"y":13.057602,"p":0},{"arg_id":"A100_0","argument":"El plebiscito no aborda una reforma integral de la seguridad social, solo se enfoca en una parte de la reforma jubilatoria.","comment_id":"100","x":7.532134,"y":12.670218,"p":0.8851587077644935},{"arg_id":"A0_0","argument":"La seguridad social es un tema importante que debemos incluir en la agenda.","comment_id":"0","x":8.799336,"y":13.662367,"p":0.7892333539029669},{"arg_id":"A160_0","argument":"Aunque no es correcto incluirla en la Constitución, la reforma en sí es mucho más dañina.","comment_id":"160","x":6.6616454,"y":13.505364,"p":0.8438780144622117},{"arg_id":"A93_0","argument":"La riqueza de la sociedad la construyen los trabajadores.","comment_id":"93","x":9.323211,"y":13.296316,"p":0},{"arg_id":"A69_0","argument":"La iniciativa del plebiscito representa un alto nivel de compromiso democrático y social, considerando el asunto como un tema de derechos humanos.","comment_id":"69","x":5.648863,"y":13.984324,"p":1},{"arg_id":"A37_0","argument":"La administración del sistema de seguridad social debe ser eficiente y de bajo costo.","comment_id":"37","x":8.766503,"y":13.296372,"p":0.926427370437002},{"arg_id":"A72_0","argument":"Deberíamos encontrar una solución consensuada entre quienes discrepamos con la reforma actual.","comment_id":"72","x":7.44237,"y":13.91249,"p":0},{"arg_id":"A72_1","argument":"El plebiscito no refleja ese consenso.","comment_id":"72","x":5.55201,"y":13.2776375,"p":0.7296646918447995},{"arg_id":"A83_0","argument":"Economistas del FA y Coalición coinciden en que si se implementa esta medida, el país perderá en todos los aspectos.","comment_id":"83","x":6.5372105,"y":12.476748,"p":1},{"arg_id":"A48_0","argument":"Una reforma en la caja previsional es diferente de una reforma jubilatoria.","comment_id":"48","x":7.717171,"y":12.37243,"p":1},{"arg_id":"A48_1","argument":"Estamos más lejos de una reforma jubilatoria.","comment_id":"48","x":7.7054987,"y":12.536758,"p":1},{"arg_id":"A34_0","argument":"El plebiscito no ignora problemas como la pobreza infantil; al contrario, los fondos de la AFAP que se destinen al BPS permitirán atenderlos mejor.","comment_id":"34","x":5.5729976,"y":13.4841,"p":1},{"arg_id":"A18_0","argument":"La constitución siempre tiene interpretaciones, y los cambios propuestos en el plebiscito no son la excepción.","comment_id":"18","x":6.367741,"y":14.179847,"p":1},{"arg_id":"A18_1","argument":"Incluir los cambios del plebiscito obliga a abrir debates a futuro.","comment_id":"18","x":6.1326885,"y":14.297548,"p":0.3110848044543854},{"arg_id":"A64_1","argument":"La única solución parece ser aumentar los impuestos.","comment_id":"64","x":9.802593,"y":12.404215,"p":0.4533960268237382},{"arg_id":"A80_0","argument":"Poner la responsabilidad de la sostenibilidad en los trabajadores aumenta las desigualdades.","comment_id":"80","x":9.327946,"y":12.719755,"p":1},{"arg_id":"A50_0","argument":"Los plebiscitos son actos que permiten mayor independencia de los ciudadanos respecto a sus partidos políticos.","comment_id":"50","x":5.725017,"y":13.998689,"p":1},{"arg_id":"A50_1","argument":"Dar libertad de acción en plebiscitos es una forma de respetar la autonomía ciudadana.","comment_id":"50","x":5.7692814,"y":14.093339,"p":1},{"arg_id":"A303_0","argument":"Si gana el sí en este plebiscito, no significa que el país se desfinanciará; la política encontrará soluciones.","comment_id":"303","x":5.4251237,"y":13.451499,"p":0.9249615722436976},{"arg_id":"A23_0","argument":"Atar las prestaciones sociales al salario mínimo nacional frena su aumento para contener el costo de la seguridad social.","comment_id":"23","x":8.748495,"y":13.228053,"p":0.926427370437002},{"arg_id":"A23_1","argument":"Este riesgo afecta negativamente a las personas trabajadoras.","comment_id":"23","x":9.360913,"y":12.542104,"p":1},{"arg_id":"A201_0","argument":"La reforma 2023 mejora la situación de las personas con discapacidad.","comment_id":"201","x":8.422425,"y":14.210914,"p":0},{"arg_id":"A201_1","argument":"Es necesario profundizar en las mejoras para las personas con discapacidad.","comment_id":"201","x":8.737349,"y":14.583337,"p":1},{"arg_id":"A17_0","argument":"No se puede incluir una propuesta como esta en la constitución debido a las dudas sobre su implementación.","comment_id":"17","x":6.57259,"y":13.783886,"p":1},{"arg_id":"A17_1","argument":"Es difícil cambiar propuestas constitucionales, por lo que estos temas deben ser regulados por ley.","comment_id":"17","x":6.7594943,"y":14.14024,"p":1},{"arg_id":"A168_0","argument":"Los trabajadores a veces se ven obligados a trabajar en negro.","comment_id":"168","x":9.133995,"y":12.467874,"p":1},{"arg_id":"A175_0","argument":"El sistema anterior era mucho mejor.","comment_id":"175","x":8.316911,"y":13.4738455,"p":0.7791537098441975},{"arg_id":"A41_0","argument":"La financiación de la seguridad social se puede lograr con políticas que combatan la precarización laboral.","comment_id":"41","x":8.862436,"y":13.605813,"p":1},{"arg_id":"A89_0","argument":"Esta reforma, al igual que la del 96, obliga a la clase trabajadora a apretarse exclusivamente.","comment_id":"89","x":8.110675,"y":12.150602,"p":0.9942078510479996},{"arg_id":"A173_0","argument":"La reforma tiene un efecto regresivo tanto intra como transgeneracional.","comment_id":"173","x":6.9853597,"y":12.807735,"p":1},{"arg_id":"A308_1","argument":"La seguridad social fue diseñada hace más de 100 años y necesita ser reevaluada.","comment_id":"308","x":8.477765,"y":13.138179,"p":0.880878247366309},{"arg_id":"A73_0","argument":"La reforma busca igualar las prestaciones de todas las cajas.","comment_id":"73","x":8.141559,"y":12.240657,"p":1},{"arg_id":"A73_1","argument":"La reforma es ley y puede ser modificada en cualquier momento.","comment_id":"73","x":6.8969083,"y":14.071125,"p":0},{"arg_id":"A66_0","argument":"El plebiscito no resuelve los problemas de las cajas militares, policiales y otros sistemas profesionales.","comment_id":"66","x":5.7933197,"y":12.900538,"p":1},{"arg_id":"A66_1","argument":"Ningún gobierno ha resuelto estos problemas en 30 años.","comment_id":"66","x":6.123652,"y":12.882641,"p":0},{"arg_id":"A52_0","argument":"Es difícil aprobar una reforma constitucional que deja muchos puntos en una zona gris, incluso con reglamentación.","comment_id":"52","x":6.7344327,"y":13.61968,"p":1},{"arg_id":"A2_0","argument":"La reforma de la seguridad social del gobierno es injusta.","comment_id":"2","x":8.466513,"y":12.250992,"p":1},{"arg_id":"A2_1","argument":"La reforma no soluciona los principales problemas.","comment_id":"2","x":6.594059,"y":12.91937,"p":1},{"arg_id":"A22_0","argument":"No quiero apoyar ninguna propuesta que aumente los impuestos a las personas trabajadoras.","comment_id":"22","x":9.30064,"y":11.957011,"p":0.9482904195589577},{"arg_id":"A158_0","argument":"La suba de impuestos siempre es enemiga de la prosperidad de los trabajadores.","comment_id":"158","x":9.478129,"y":12.09401,"p":0.935665992748015},{"arg_id":"A38_0","argument":"La reforma propuesta en el plebiscito podría hacer perder el grado inversor de Uruguay.","comment_id":"38","x":6.424263,"y":12.53548,"p":1},{"arg_id":"A38_1","argument":"Esto generaría más dificultades para financiar el desarrollo del país.","comment_id":"38","x":6.6265683,"y":12.40895,"p":1},{"arg_id":"A127_0","argument":"El SI no considera aspectos técnicos indispensables para reformar la Seguridad Social.","comment_id":"127","x":8.082532,"y":12.701266,"p":0},{"arg_id":"A206_0","argument":"El costo de cualquier reforma previsional es multimillonario.","comment_id":"206","x":7.421122,"y":12.279366,"p":0.8090757915863461},{"arg_id":"A146_1","argument":"Es necesario legislar específicamente para cada sector etáreo.","comment_id":"146","x":8.250499,"y":14.769764,"p":0},{"arg_id":"A290_0","argument":"La seguridad social no debe depender únicamente de los aportes de los trabajadores, especialmente si las empresas reemplazan a los trabajadores con IA.","comment_id":"290","x":8.865556,"y":12.943774,"p":0.7918563575529359},{"arg_id":"A79_0","argument":"El plebiscito presenta problemas de implementación, pero se plantea desde una perspectiva de justicia social.","comment_id":"79","x":5.79754,"y":13.752091,"p":0.3824860850577111},{"arg_id":"A79_1","argument":"El plebiscito es un punto de partida importante.","comment_id":"79","x":5.8257136,"y":14.161217,"p":0.5465089199545334},{"arg_id":"A155_1","argument":"Esto resultará en un millón de demandas contra el estado.","comment_id":"155","x":6.8365636,"y":12.285354,"p":0.6715714787082097},{"arg_id":"A33_1","argument":"Para lograr cambios significativos en este tema, es necesario complementar las políticas con cuidados y sanitarias.","comment_id":"33","x":8.642395,"y":14.483117,"p":0.8430199139045587},{"arg_id":"A134_0","argument":"Creo en el ahorro previo y no estoy de acuerdo con el lucro de privados.","comment_id":"134","x":9.129058,"y":11.817365,"p":0.7118802369005833},{"arg_id":"A185_1","argument":"Si se deroga esta reforma, se crearán problemas mayores para el país.","comment_id":"185","x":6.8092065,"y":12.726875,"p":1}]},{"cluster":"Críticas a las AFAP","cluster_id":"0","takeaways":"Los participantes expresaron un fuerte rechazo hacia las AFAP, argumentando que son vehículos especulativos con altas comisiones y que no cumplen con las promesas de beneficios. Se destacó que los jubilados reciben pensiones bajas debido a aportes insuficientes y que la eliminación de las AFAP podría mejorar las jubilaciones y aumentar la recaudación del BPS.\n\nAdemás, se mencionó la desinformación sobre la seguridad social y la afiliación forzosa a las AFAP, lo que limita la libertad de elección. Muchos consideran que la administración del ahorro individual debería estar a cargo del BPS sin retenciones por comisiones, y que las AFAP, al invertir en cajeros automáticos, contribuyen a la reducción del empleo.","arguments":[{"arg_id":"A210_0","argument":"El ahorro individual debe ser administrado por el BPS sin retener dinero por comisión.","comment_id":"210","x":9.271043,"y":11.011982,"p":1},{"arg_id":"A210_1","argument":"Se debe oponerse a las Afaps.","comment_id":"210","x":8.838592,"y":10.508095,"p":1},{"arg_id":"A226_0","argument":"Los jubilados de la AFAP reciben pensiones bajas porque aportaron por poco tiempo.","comment_id":"226","x":9.962333,"y":10.669324,"p":0.6884816131995936},{"arg_id":"A226_1","argument":"Las AFAP son efectivas cuando se ahorra durante toda la vida laboral.","comment_id":"226","x":9.642266,"y":10.413264,"p":1},{"arg_id":"A102_0","argument":"Las AFAP solo funcionan en 12 países y no han logrado repartir los beneficios prometidos.","comment_id":"102","x":9.247786,"y":10.186264,"p":1},{"arg_id":"A102_1","argument":"Las AFAP son considerados vehículos especulativos.","comment_id":"102","x":9.436302,"y":10.235872,"p":1},{"arg_id":"A145_0","argument":"La eliminación de las AFAP mejoraría las jubilaciones.","comment_id":"145","x":9.441712,"y":10.864904,"p":1},{"arg_id":"A145_1","argument":"La eliminación de las AFAP aumentaría la recaudación del BPS.","comment_id":"145","x":9.283432,"y":10.708801,"p":1},{"arg_id":"A85_0","argument":"Hay desinformación sobre la seguridad social y las AFAP.","comment_id":"85","x":8.959488,"y":10.554945,"p":1},{"arg_id":"A108_1","argument":"No quiero ser obligado a afiliarme a una AFAP.","comment_id":"108","x":8.747298,"y":10.72736,"p":1},{"arg_id":"A43_1","argument":"Las AFAP son una de las formas de administrar el ahorro para la jubilación.","comment_id":"43","x":9.655521,"y":10.426395,"p":1},{"arg_id":"A143_1","argument":"Es un delito quitar los ahorros individuales a las AFPs.","comment_id":"143","x":9.377266,"y":10.767841,"p":1},{"arg_id":"A35_0","argument":"Se deben eliminar las AFAP debido a sus altas comisiones y bajos pagos.","comment_id":"35","x":9.149299,"y":10.363726,"p":1},{"arg_id":"A191_0","argument":"Las AFAP invierten en cajeros automáticos, lo que reduce el empleo para los trabajadores.","comment_id":"191","x":9.383847,"y":10.430138,"p":1},{"arg_id":"A175_1","argument":"Hay que terminar con las Afaps, ya que son una estafa.","comment_id":"175","x":8.852262,"y":10.289099,"p":1},{"arg_id":"A183_0","argument":"Se deben regular las IA, ya que representan mano de obra que no aporta.","comment_id":"183","x":8.888852,"y":10.174769,"p":1},{"arg_id":"A40_0","argument":"El marco regulatorio actual impone la afiliación forzosa a las AFAP, eliminando la libertad de elección.","comment_id":"40","x":8.577803,"y":10.861817,"p":0.6130865412273353},{"arg_id":"A155_0","argument":"La confiscación de los ahorros individuales por AFAP es una apropiación indebida.","comment_id":"155","x":9.605262,"y":10.660038,"p":1},{"arg_id":"A55_0","argument":"Es necesario eliminar las Afap, ya que no tienen ningún sentido.","comment_id":"55","x":8.894103,"y":10.211762,"p":1}]}],"comments":{"0":{"comment":"La seguridad social es un tema importante que debemos tener en agenda y que no está solucionado con la regulación actual.","agrees":400,"disagrees":30,"interview":"ParticipaLab","timestamp":1727011721981},"2":{"comment":"La reforma de la seguridad social del gobierno es injusta y no soluciona los principales problemas.","agrees":407,"disagrees":118,"interview":"ParticipaLab","timestamp":1727011767325},"5":{"comment":"El plebiscito compromete la capacidad del Estado de destinar recursos a otras políticas prioritarias.","agrees":197,"disagrees":270,"interview":"ParticipaLab","timestamp":1727011792143},"10":{"comment":"La edad para jubilarse tiene que estar relacionado con el trabajo que las personas realizan.","agrees":377,"disagrees":114,"interview":"ParticipaLab","timestamp":1727011840516},"11":{"comment":"Es necesario y un derecho asegurar la posibilidad de jubilarse a los 60 años.","agrees":340,"disagrees":166,"interview":"ParticipaLab","timestamp":1727011853041},"13":{"comment":"El plebiscito plantea el cobro del salario mínimo por prestación social. Si una persona cobra más de una prestación, le corresponde por cada una. Eso puede traer injusticias.","agrees":174,"disagrees":148,"interview":"ParticipaLab","timestamp":1727011869850},"14":{"comment":"El plebiscito es una propuesta que restablece derechos perdidos en la última regulación sobre la seguridad social.","agrees":284,"disagrees":174,"interview":"ParticipaLab","timestamp":1727011882814},"17":{"comment":"No se puede incluir una propuesta como la de este plebiscito en la constitución. Deja muchas dudas de cómo implementarla, después es difícil de cambiar. Son temas que hay que regular por ley.","agrees":301,"disagrees":221,"interview":"ParticipaLab","timestamp":1727011913961},"18":{"comment":"La constitución siempre tiene interpretaciones, incluir los cambios que propone el plebiscito no es la excepción y obliga a abrir debates a futuro.","agrees":296,"disagrees":131,"interview":"ParticipaLab","timestamp":1727011934897},"19":{"comment":"Se plantea como una solución la suba a los 65 años, pero se olvida que para muchos trabajadores resulta imposible acceder o permanecer en el campo laboral hasta esa edad.","agrees":401,"disagrees":65,"interview":"ParticipaLab","timestamp":1727011944371},"22":{"comment":"Yo no quiero ni escuchar y menos apoyar una propuesta que haga pagar más impuestos a las personas trabajadoras.","agrees":205,"disagrees":135,"interview":"ParticipaLab","timestamp":1727011989316},"23":{"comment":"Cuando las prestaciones sociales estuvieron atadas al salario mínimo nacional se frenó su aumento para contener el costo de la seguridad social. Ese riesgo no lo quiero tener, afecta a las personas trabajadoras.","agrees":181,"disagrees":151,"interview":"ParticipaLab","timestamp":1727011997823},"24":{"comment":"El límite de los 60 años también beneficia a la Caja militar, notarial, bancaria y profesional. Me parece que no es justo.","agrees":122,"disagrees":170,"interview":"ParticipaLab","timestamp":1727012018169},"33":{"comment":"Los mayores problemas sociales no se dan en las personas mayores, entre las que la pobreza alcanza a menos del 2%. Para lograr cambios significativos en este tema hay que complementarlos con políticas de cuidados y sanitarias, entre otras.","agrees":295,"disagrees":53,"interview":"ParticipaLab","timestamp":1727695008502},"34":{"comment":"El plebiscito no desconoce problemas como la pobreza infantil; al contrario, podrán atenderse mejor con los fondos de la AFAP que se vuelquen al BPS","agrees":201,"disagrees":169,"interview":"ParticipaLab","timestamp":1727695049396},"35":{"comment":"Hay que eliminar las AFAP. Cobran altas comisiones y al final se cobra poco. El 90 % de la gente ha cobrado un promedio de $ 5.000.","agrees":285,"disagrees":134,"interview":"ParticipaLab","timestamp":1727695121203},"36":{"comment":"Regular a los 60 años la jubilación no significa que las personas puedan acceder a ella; los más precarizados y especialmente las mujeres es difícil que alcancen los 30 de años de aportes a esa edad.","agrees":323,"disagrees":79,"interview":"ParticipaLab","timestamp":1727695201549},"37":{"comment":"La administración del sistema de seguridad social se debe hacer de manera eficiente, con el menor costo posible.","agrees":280,"disagrees":79,"interview":"ParticipaLab","timestamp":1727695288189},"38":{"comment":"La reforma propuesta en el plebiscito hará perder el grado inversor de Uruguay y habrá más dificultades para financiar el desarrollo del país.","agrees":132,"disagrees":246,"interview":"ParticipaLab","timestamp":1727695299028},"39":{"comment":"Establecer la edad jubilatoria a los 60 años en la Constitución es contrario a toda la evidencia sobre el aumento de la esperanza de vida","agrees":184,"disagrees":257,"interview":"ParticipaLab","timestamp":1727695371534},"40":{"comment":"El marco regulatorio actual impone la afiliación forzosa a las AFAP, eliminando la libertad de elección.","agrees":347,"disagrees":67,"interview":"ParticipaLab","timestamp":1727695423511},"41":{"comment":"La financiación de la seguridad social se puede lograr con políticas en contra de la precarización laboral y que favorezcan el ingreso de las nuevas generaciones al mercado de trabajo.","agrees":360,"disagrees":65,"interview":"ParticipaLab","timestamp":1727778930244},"42":{"comment":"En una población cada vez más envejecida, porque se vive más tiempo y hay menos nacimientos, no habrá forma que se pueda pagar jubilaciones dignas sin subir la edad de jubilación.","agrees":195,"disagrees":289,"interview":"ParticipaLab","timestamp":1727778937847},"43":{"comment":"En sociedades envejecidas es conveniente que una parte de la jubilación provenga del ahorro previo individual. Las AFAP son una de varias formas de administrarlo","agrees":189,"disagrees":249,"interview":"ParticipaLab","timestamp":1727778946085},"44":{"comment":"La edad de jubilación no debe fijarse en la Constitución","agrees":247,"disagrees":167,"interview":"Monica (1959) (F)","timestamp":1727828412206},"48":{"comment":"Considero que una cosa es una reforma en la caja previsional y otra cuestión es una reforma jubilatoria. De lo segundo estamos más lejos.","agrees":137,"disagrees":39,"interview":"Morales (1989) (M)","timestamp":1727834712896},"50":{"comment":"los plebiscitos son los actos de mayor independencia de los ciudadanos de sus partidos políticos.Dar libertad de acción es respeto ciudadano","agrees":325,"disagrees":63,"interview":"IVO (1954) (F)","timestamp":1727835610997},"52":{"comment":"Es difícil aprobar una reforma constitucional que deja demasiados puntos en una zona gris aún reglamentándose.","agrees":255,"disagrees":184,"interview":"Anaclara (1965) (F)","timestamp":1727835732483},"53":{"comment":"La capacidad de ahorro o nivel de ingresos de las personas,  aumenta  capacidad de aportar con impuestos a  solucionar  problemas sociales.","agrees":122,"disagrees":53,"interview":"America (1949) (F)","timestamp":1727836014449},"55":{"comment":"Hay que eliminar las Afap, no tienen ningún sentido","agrees":265,"disagrees":149,"interview":"El flaco (1978) (M)","timestamp":1727838314709},"57":{"comment":"El plebiscito no resuelve problemas de déficit para el Estado (caja militar y policial) y otros sistemas corporativos (cajas profesionales)","agrees":264,"disagrees":43,"interview":"MPB (1988) (M)","timestamp":1727892503201},"59":{"comment":"Puedo escuchar una propuesta que comprenda a todos los sectores sociales para solucionar el problema.","agrees":223,"disagrees":38,"interview":"Polanyi (1976) (M)","timestamp":1727894928399},"62":{"comment":"La reforma de la seguridad recientemente aprobada castiga a los trabajadores. Se debe  consensuar una salida por todos los involucrados.","agrees":326,"disagrees":98,"interview":"Gallego (1957) (M)","timestamp":1727898707424},"64":{"comment":"Todos queremos trabajar menos y ganar más pero ya no nos morimos a los 65,como piensan pagar jubilaciones y seguro médico? Solo subiendo impuestos","agrees":151,"disagrees":227,"interview":"Cali (1978) (F)","timestamp":1727900507100},"66":{"comment":"Plebiscito no resuelve problemas caja militar y policial y otros sistemas (cajas profesionales). Pero ningún gobierno lo resolvió en 30 años","agrees":296,"disagrees":25,"interview":"Dante (2000) (N)","timestamp":1727902720514},"69":{"comment":"La iniciativa del plebiscito es de los más altos niveles democráticos de compromiso social y colectivo, entendiendo al asunto como de DDHH.","agrees":220,"disagrees":101,"interview":"Carlos (1980) (M)","timestamp":1727907506179},"72":{"comment":"Deberíamos encontrar una solución más consensuada entre quienes discrepamos con la reforma actual. El plebiscito no tiene ese consenso.","agrees":203,"disagrees":130,"interview":"Juli (1997) (F)","timestamp":1727911456230},"73":{"comment":"La reforma tiende a igualar las prestaciones de todas las cajas. Ademas es ley, por tanto se puede modificar en cualquier momento.","agrees":83,"disagrees":91,"interview":"Flaco (1943) (M)","timestamp":1727915313820},"74":{"comment":"Si sale el plebiscito obliga a discutir y reglamentar la seguridad social para todos, es la forma de distribuir mejor la riqueza.","agrees":223,"disagrees":149,"interview":"Parafa (1977) (M)","timestamp":1727915923349},"75":{"comment":"Estoy de acuerdo con una reforma previsional sin exoneraciones patronales - renta básica universal: por edad avanzada, por crianza, etc","agrees":217,"disagrees":84,"interview":"C (1966) (F)","timestamp":1727922457802},"76":{"comment":"Las acusaciones de inviabilidad de la reforma pueden estar basadas en supuestos económicos ortodoxos que pueden ser revisados.","agrees":215,"disagrees":119,"interview":"Mateovich (2000) (M)","timestamp":1727928006024},"78":{"comment":"Debería pensarse en un sistema de protección social, esta perspectiva es más integral y no está en el plebiscito ni en la reforma actual.","agrees":182,"disagrees":56,"interview":"Federica Peralta (1989) (F)","timestamp":1727960820040},"79":{"comment":"El plebiscito tiene problemas de implementación pero está planteado desde una perspectiva de justicia social, es un punto de partida.","agrees":275,"disagrees":117,"interview":"Federica Peralta (1989) (F)","timestamp":1727960973243},"80":{"comment":"Poner la responsabilidad de la sostenibilidad del sistema en lxs trabajadorxs solo aumenta las desigualdades. Hay que gravar capitales","agrees":296,"disagrees":114,"interview":"Federica Peralta (1989) (F)","timestamp":1727961082680},"81":{"comment":"Nada se va a solucionar si no se generan condiciones para mejorar el acceso al mercado laboral de lxs jóvenes.","agrees":266,"disagrees":37,"interview":"Federica Peralta (1989) (F)","timestamp":1727961146290},"82":{"comment":"Coloquemos mirada de género: si las prestaciones se basan en la historia laboral-salarial, las mujeres tienen menor cobertura y beneficios.","agrees":237,"disagrees":111,"interview":"Misma (1984) (F)","timestamp":1727961667972},"83":{"comment":"Economistas del FA y Coalición están de acuerdo que si sale,perdemos por todos lados,esto no es contra el gobierno actual es contra el país.","agrees":122,"disagrees":163,"interview":"Marcela (1978) (F)","timestamp":1727977751304},"84":{"comment":"El aumento de la esperanza de vida no debe implicar aumentar la edad de jubilación; también aumenta la productividad y la automatización.","agrees":260,"disagrees":94,"interview":"Mateovich (2000) (M)","timestamp":1727992431086},"85":{"comment":"Hay gran desinformación sobre la seguridad social y las afap, este plebiscito también significa una oprtunidad para informar a la ciudadanía","agrees":272,"disagrees":59,"interview":"NicolásZ (1978) (M)","timestamp":1728000156469},"88":{"comment":"Las personas deben beneficiarse de los incrementos de productividad y existen diferencias de esperanza de vida según trabajos y clase","agrees":263,"disagrees":26,"interview":"Julio (1969) (M)","timestamp":1728050436100},"89":{"comment":"El tema es quien se aprieta, esta reforma al igual que la del 96 obliga a apretarse de forma exclusiva a la clase trabajadora","agrees":242,"disagrees":111,"interview":"Julio (1969) (M)","timestamp":1728050574022},"93":{"comment":"la riqueza de la sociedad la construyen los trabajadoras,es injusto hacer trabajar 5 años más y encima cobrar menos,gravemos el capital.","agrees":219,"disagrees":86,"interview":"Joaquín (1955) (M)","timestamp":1728148771956},"94":{"comment":"Alguien de 65 años que cuida a nietos, hace más por la seguridad social que si trabajara para aumentar el capital de empresarios millonarios","agrees":152,"disagrees":68,"interview":"Valentina (1997) (F)","timestamp":1728216713564},"95":{"comment":"La aceleración digital está cambiando el paradigma, hay que diseñar nuevos escenarios de vida desvinculados del trabajo.","agrees":150,"disagrees":25,"interview":"Ale (1983) (M)","timestamp":1728218088238},"97":{"comment":"Esta reforma, no es más que una medida socialista, que busca pan para hoy, y hambre para mañana.","agrees":69,"disagrees":184,"interview":"Fede (1989) (TG)","timestamp":1728248584286},"98":{"comment":"Si quienes trabajamos no ponemos un freno, pronto van a querer que nos jubilemos a los 70.","agrees":193,"disagrees":90,"interview":"Andrés (1986) (M)","timestamp":1728272383530},"99":{"comment":"La jubilación debe depender de los aportes realizados y no solamente por edad o necesidades. Quien no aportó no debe cobrar.","agrees":86,"disagrees":145,"interview":"Pitoloco (1977) (M)","timestamp":1728324030945},"100":{"comment":"El plebiscito no tiene una perspectiva de reforma de la seguridad social sino solo de una parte de la reforma jubilatoria","agrees":123,"disagrees":35,"interview":"El Pancho (1991) (M)","timestamp":1728333516791},"101":{"comment":"Se debe realizar un debate profundo; políticos, académicos y sociedad civil, cualquier ley es perfectible. Caja Militar revisarse.","agrees":241,"disagrees":27,"interview":"Adri (1961) (F)","timestamp":1728340408211},"102":{"comment":"Las AFAP funcionan solamente en 12 países. En ninguno de ellos han conseguido repartir los beneficios prometidos:son vehículos especulativos","agrees":134,"disagrees":42,"interview":"Sinan (1976) (M)","timestamp":1728354720847},"103":{"comment":"Hay que insentivar que la clase media tengas hijos en base a políticas públicas y exoneración tributaria para dar solución a largo plazo","agrees":70,"disagrees":57,"interview":"Juan (1990) (M)","timestamp":1728406688402},"107":{"comment":"Es hora de legislar en que los aportes de los que mas ganan, sean mayores. Las jubilaciones deben beneficiar a la clase trabajadora.","agrees":135,"disagrees":37,"interview":"Jb (1965) (M)","timestamp":1728477022108},"108":{"comment":"No estoy de acuerdo con incluir estos temas en la constitución. Pero no quiero que me obliguen a afiliarte a una afap.","agrees":74,"disagrees":32,"interview":"Lorenzo (1961) (M)","timestamp":1728486919348},"112":{"comment":"La idea es que a partir de los 60 puedas elegir cuando jubilarte Hay profesiones en las que a los 55 ya no estas como para seguir trabajand","agrees":144,"disagrees":30,"interview":"Marth (2002) (F)","timestamp":1728495547437},"114":{"comment":"Los impuestos no son mis enemigos, una buena administración hace uso de ellos para un bien común. Prefiero altos impuestos, altas ganancias.","agrees":87,"disagrees":42,"interview":"Ton (2003) (TG)","timestamp":1728499793892},"115":{"comment":"Asegurar una pensión o jubilación acorde a los costos de vida de este país.  Que puedan acceder a su medicación y  mejor calidad de vida.","agrees":173,"disagrees":13,"interview":"Silvia (1970) (F)","timestamp":1728500309072},"124":{"comment":"El plebiscito no toma en cuenta los cambios en el mercado laboral ni el hecho de la baja natalidad, por lo que hay menos gente aportando","agrees":74,"disagrees":81,"interview":"Tamy (1990) (N)","timestamp":1728520383950},"126":{"comment":"Creo 60 años debería ser obligatorio para todos incluso legisladores y presidente","agrees":69,"disagrees":59,"interview":"Paciencia (1958) (F)","timestamp":1728526079268},"127":{"comment":"El SI no contempla aspectos técnicos indispensables para realizar una Reforma de la Seguridad Social.","agrees":74,"disagrees":69,"interview":"Zarx (1961) (M)","timestamp":1728527311693},"132":{"comment":"la reforma no soluciono todos los problemas pero derogarla tampoco sera la solucion.","agrees":63,"disagrees":80,"interview":"Piscis 27 (1978) (F)","timestamp":1728537137156},"133":{"comment":"Hombres tienen una media de 6 años menos de esperanza de vida. Deberían jubilarse antes. Perspectiva de género urgente. Muchos mueren pronto","agrees":28,"disagrees":66,"interview":"Pisti (1992) (O)","timestamp":1728538712411},"134":{"comment":"Creo en el ahorro previo, no estoy de acuerdo con el lucro de privados ni en qué tenga un costo para el que aporta","agrees":126,"disagrees":41,"interview":"Toto (1969) (M)","timestamp":1728540345052},"142":{"comment":"No estoy seguro que el plebiscito sea solución, pero la últ reforma es mala, idem la que creo las Afaps. No puede lucrarse la seg social.","agrees":134,"disagrees":57,"interview":"Toto (1969) (M)","timestamp":1728542563668},"143":{"comment":"Tratar de incluir en la constitución la edad jubilatoria es irresponsable. Es delito quitar los ahorros individuales a las afaps","agrees":59,"disagrees":96,"interview":"Grace (1962) (F)","timestamp":1728548623876},"145":{"comment":"La eliminación de las AFAP significa una mejora  tanto en las jubilaciones como en la recaudación del BPS.","agrees":114,"disagrees":62,"interview":"Chete (1947) (M)","timestamp":1728564610692},"146":{"comment":"La esperanza de vida cambia segun el quintil de la población, en todo caso habría que legislar especificamente para cada sector etáreo.","agrees":52,"disagrees":60,"interview":"Juan (1959) (M)","timestamp":1728570241577},"155":{"comment":"La confiscación de los ahorros individuales por AFAP es un millon de demandas seguras al estado. Es apropiación indebida","agrees":76,"disagrees":101,"interview":"Juan (1963) (M)","timestamp":1728581241076},"157":{"comment":"Es necesario, sincerar este asunto de las jubilaciones, el sistema anterior ya no es posible con el porcentaje de activos/pasivos","agrees":94,"disagrees":55,"interview":"Doc (1969) (M)","timestamp":1728585827969},"158":{"comment":"La suba de impuestos es siempre enemigo de la prosperidad de los trabajadores","agrees":101,"disagrees":60,"interview":"Doc (1969) (M)","timestamp":1728586016620},"160":{"comment":"Aún cuando no es correcto incluirla en la Constitución, es mucho más dañina la reforma per se.","agrees":27,"disagrees":24,"interview":"Lu (1968) (F)","timestamp":1728613368118},"168":{"comment":"A veces los trabajadores empleados se ven obligados a trabajar en negro. Depender sólo de los aportes realizados desconoce esta realidad","agrees":75,"disagrees":20,"interview":"ALFREDO (1972) (M)","timestamp":1728676567807},"173":{"comment":"la reforma tiene un efecto regresivo intra y trans generacional. hay que enfocar los recursos del estado en la infancia y adolescencia.","agrees":25,"disagrees":32,"interview":"google (1995) (M)","timestamp":1728697245742},"174":{"comment":"Los partidos si tienen un programa tienen que tomar posición con respecto a un tema tan importante. No es serio dar libertad de acción.","agrees":30,"disagrees":58,"interview":"Palestina (1966) (F)","timestamp":1728707131416},"175":{"comment":"Era mucho mejor el sistema anterior. Hay que terminar con las Afaps. Son una estafa","agrees":50,"disagrees":29,"interview":"Palestina (1966) (F)","timestamp":1728708732065},"176":{"comment":"Discutir,repensar y trabajar porque todos lleguemos a una jubilación que nos garantice no morir de hambre a la vejez","agrees":107,"disagrees":5,"interview":"Irma (1965) (F)","timestamp":1728729088547},"183":{"comment":"Se deben grabar las IA porque en definitiva son mano de obra que no aporta.","agrees":45,"disagrees":21,"interview":"Ale (1964) (M)","timestamp":1728774650825},"185":{"comment":"la edad por sector es aceptable, esta reforma si se deroga creara problemas mayores al pais","agrees":34,"disagrees":45,"interview":"justicia (1958) (F)","timestamp":1728788639834},"191":{"comment":"Las AFAP hacen inversiones, por ejemplo, en cajeros automáticos para tata, con nuestra plata le sacamos trabajo a los y las trabajadoras.","agrees":52,"disagrees":26,"interview":"Cande (2006) (F)","timestamp":1728830927768},"193":{"comment":"A mi me parece lógico que las jubilaciones y pensiones no puedan ser menores que el salario mínimo,se supone q es lo mínimo para poder vivir","agrees":92,"disagrees":18,"interview":"Cande (2006) (F)","timestamp":1728831367986},"200":{"comment":"Considero que a los 60 años, cumplimos nuestro ciclo laboral. Si alguien quiere y puede seguir trabajando, también debería tener esa opción.","agrees":89,"disagrees":15,"interview":"TS (1962) (F)","timestamp":1728838386055},"201":{"comment":"La reforma 2023 mejora la situación de las personas en situación de discapacidad.  Habría que profundizar más en ese sentido","agrees":21,"disagrees":29,"interview":"Laura (1959) (F)","timestamp":1728843964093},"206":{"comment":"El costo de cualquier reforma previsional es multimillonaria. El fondo de la cuestión es, quien lo paga?","agrees":44,"disagrees":23,"interview":"Joaquim (1957) (M)","timestamp":1728876317317},"210":{"comment":"El ahorro individual debe ser administrado por el BPS, quien no podrá retener dinero por comisión. No a las Afaps","agrees":71,"disagrees":32,"interview":"Chuqui (1995) (O)","timestamp":1728903830298},"226":{"comment":"Los que ya se jubilaron de la AFAP cobran poco porque aportaron por poco tiempo. Las afap funcionan cuando ahorras por toda la vida laboral","agrees":20,"disagrees":43,"interview":"Fed (1998) (N)","timestamp":1729026018820},"229":{"comment":"Atar la jubilación mínima al SMN, que lo define el gobierno, es contraproducente. Podemos terminar con jubilaciones y salarios sumergidos.","agrees":38,"disagrees":34,"interview":"Capibara (1998) (M)","timestamp":1729026559539},"230":{"comment":"El plebiscito consolida privilegios de algunos grupos, como por ejemplo imposibilitando revisar las inequidades de la Caja Militar.","agrees":22,"disagrees":30,"interview":"Capibara (1998) (M)","timestamp":1729026642422},"290":{"comment":"La seguridad social no debe recaer solamente en el aporte de los trabajadores. Más cuando las empresas van a reemplazarlos por las IA.","agrees":22,"disagrees":4,"interview":"Flor (1986) (F)","timestamp":1729704798396},"300":{"comment":"Para que la juventud tenga oportunidades laborales, a parte de prepararse, la jubilación a los 60 años es de lógica.","agrees":16,"disagrees":11,"interview":"Roam (1948) (F)","timestamp":1729771066640},"303":{"comment":"Si gana el si en este plebiscito no significa que el país se va a desfinanciar. Para eso existe la política, ya se encontrarán soluciones.","agrees":17,"disagrees":9,"interview":"Elegar56 (1956) (M)","timestamp":1729772413956},"308":{"comment":"La estructura demográfica actual no puede sustentar una jubilación a los 60 años. Una seguridad social pensada hace más de 100 años","agrees":12,"disagrees":7,"interview":"Lulu (1992) (F)","timestamp":1729821234665}},"translations":{},"overview":"Los hallazgos de la consulta pública revelan tres clusters principales de preocupación en torno a la seguridad social y el apoyo a la clase media. En el primer cluster, se aboga por políticas que incentiven a la clase media a tener hijos y se cuestiona la viabilidad de una jubilación a los 60 años, sugiriendo una adaptación a las realidades laborales actuales. El segundo cluster critica el plebiscito propuesto, argumentando que no aborda una reforma integral de la seguridad social y podría perjudicar el mercado laboral. Finalmente, el tercer cluster expresa un fuerte rechazo hacia las AFAP, señalando que su eliminación podría mejorar las pensiones y que la gestión del ahorro individual debería ser administrada por el BPS sin comisiones.","config":{"name":"Despolarizar: Plebiscito Seguridad Social","question":"Participa busca aportar a la despolarización en distintas temáticas de discusión pública.","input":"despolarizar_comentarios_finales","model":"gpt-4o-mini","extraction":{"workers":3,"limit":100,"source_code":"import os\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\nimport concurrent.futures\n\n\ndef extraction(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/args.csv\"\n    comments = pd.read_csv(f\"inputs/{config['input']}.csv\")\n\n    model = config['extraction']['model']\n    prompt = config['extraction']['prompt']\n    workers = config['extraction']['workers']\n    limit = config['extraction']['limit']\n\n    comment_ids = (comments['comment-id'].values)[:limit]\n    comments.set_index('comment-id', inplace=True)\n    results = pd.DataFrame()\n    update_progress(config, total=len(comment_ids))\n    for i in tqdm(range(0, len(comment_ids), workers)):\n        batch = comment_ids[i: i + workers]\n        batch_inputs = [comments.loc[id]['comment-body'] for id in batch]\n        batch_results = extract_batch(batch_inputs, prompt, model, workers)\n        for comment_id, extracted_args in zip(batch, batch_results):\n            for j, arg in enumerate(extracted_args):\n                new_row = {\"arg-id\": f\"A{comment_id}_{j}\",\n                           \"comment-id\": int(comment_id), \"argument\": arg}\n                results = pd.concat(\n                    [results, pd.DataFrame([new_row])], ignore_index=True)\n        update_progress(config, incr=len(batch))\n    results.to_csv(path, index=False)\n\n\ndef extract_batch(batch, prompt, model, workers):\n    with concurrent.futures.ThreadPoolExecutor(max_workers=workers) as executor:\n        futures = [executor.submit(\n            extract_arguments, input, prompt, model) for input in list(batch)]\n        concurrent.futures.wait(futures)\n        return [future.result() for future in futures]\n\n\ndef extract_arguments(input, prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    try:\n        obj = json.loads(response)\n        # LLM sometimes returns valid JSON string\n        if isinstance(obj, str):\n            obj = [obj]\n        items = [a.strip() for a in obj]\n        items = filter(None, items)  # omit empty strings\n        return items\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Input was:\", input)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying...\")\n            return extract_arguments(input, prompt, model, retries - 1)\n        else:\n            print(\"Silently giving up on trying to generate valid list.\")\n            return []\n","prompt":"/system\n\nYou are a professional research assistant and your job is to help \nme prepare a nice and clean datasets of arguments. \n\nThe context is that we have run a public consultation on the \ntopic of artificial intelligence. I'm going to give you examples \nof arguments that were contributed by the public and I want you \nto help me make them more concise and easy to read. When really \nnecessary, you can also break it down into two separate arguments, \nbut it will often be best to return a single arguments. \n\nPlease return the result as a well-formatted JSON list of strings. \n\n/human\n\nAI technologies should be developed with a focus on reducing their own \nenvironmental impact over their lifecycle.\n\n/ai \n\n[\n  \"We should focus on reducing the environmental impact of AI technologies\"\n]\n\n/human \n\nThere should be a concerted effort to educate the public about the \ncapabilities, limitations, and ethical considerations of AI.\n\n/ai \n\n[\n  \"We should educate the public about the capabilities of AI\",\n  \"We should educate the public about the limitations and ethical considerations of AI\"\n]\n\n/human \n\nAI can optimize smart homes and buildings for energy efficiency and occupant wellbeing.\n\n/ ai \n\n[\n  \"AI can optimize smart homes and buildings for energy efficiency and occupant wellbeing.\"\n]\n\n/human \n\nAI can help optimize energy grids, reducing waste and carbon emissions.\n\n/ai \n\n[\n  \"AI could optimize energy grids to reduce waste and carbon emissions.\"\n]\n\n","model":"gpt-4o-mini"},"clustering":{"clusters":3,"source_code":"\"\"\"Cluster the arguments using UMAP + HDBSCAN and GPT-4.\"\"\"\n\nimport pandas as pd\nimport numpy as np\nfrom importlib import import_module\n\n\ndef clustering(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/clusters.csv\"\n    arguments_df = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    arguments_array = arguments_df[\"argument\"].values\n\n    embeddings_df = pd.read_pickle(f\"outputs/{dataset}/embeddings.pkl\")\n    embeddings_array = np.asarray(embeddings_df[\"embedding\"].values.tolist())\n    clusters = config['clustering']['clusters']\n\n    result = cluster_embeddings(\n        docs=arguments_array,\n        embeddings=embeddings_array,\n        metadatas={\n            \"arg-id\": arguments_df[\"arg-id\"].values,\n            \"comment-id\": arguments_df[\"comment-id\"].values,\n        },\n        n_topics=clusters,\n    )\n    result.to_csv(path, index=False)\n\n\ndef cluster_embeddings(\n    docs,\n    embeddings,\n    metadatas,\n    min_cluster_size=2,\n    n_components=2,\n    n_topics=6,\n):\n    # (!) we import the following modules dynamically for a reason\n    # (they are slow to load and not required for all pipelines)\n    SpectralClustering = import_module('sklearn.cluster').SpectralClustering\n    stopwords = import_module('nltk.corpus').stopwords\n    HDBSCAN = import_module('hdbscan').HDBSCAN\n    UMAP = import_module('umap').UMAP\n    CountVectorizer = import_module(\n        'sklearn.feature_extraction.text').CountVectorizer\n    BERTopic = import_module('bertopic').BERTopic\n\n    umap_model = UMAP(\n        random_state=42,\n        n_components=n_components,\n    )\n    hdbscan_model = HDBSCAN(min_cluster_size=min_cluster_size)\n\n    stop = stopwords.words(\"english\")\n    vectorizer_model = CountVectorizer(stop_words=stop)\n    topic_model = BERTopic(\n        umap_model=umap_model,\n        hdbscan_model=hdbscan_model,\n        vectorizer_model=vectorizer_model,\n        verbose=True,\n    )\n\n    # Fit the topic model.\n    _, __ = topic_model.fit_transform(docs, embeddings=embeddings)\n\n    n_samples = len(embeddings)\n    n_neighbors = min(n_samples - 1, 10)\n    spectral_model = SpectralClustering(\n        n_clusters=n_topics,\n        affinity=\"nearest_neighbors\",\n        n_neighbors=n_neighbors,  # Use the modified n_neighbors\n        random_state=42\n    )\n    umap_embeds = umap_model.fit_transform(embeddings)\n    cluster_labels = spectral_model.fit_predict(umap_embeds)\n\n    result = topic_model.get_document_info(\n        docs=docs,\n        metadata={\n            **metadatas,\n            \"x\": umap_embeds[:, 0],\n            \"y\": umap_embeds[:, 1],\n        },\n    )\n\n    result.columns = [c.lower() for c in result.columns]\n    result = result[['arg-id', 'x', 'y', 'probability']]\n    result['cluster-id'] = cluster_labels\n\n    return result\n"},"translation":{"model":"gpt-4o-mini","languages":[],"flags":[],"source_code":"\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages\nfrom langchain.schema import AIMessage\nimport pandas as pd\nimport json\nfrom tqdm import tqdm\n\n\ndef translation(config):\n\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/translations.json\"\n    results = {}\n\n    languages = list(config.get('translation', {}).get('languages', []))\n    if len(languages) == 0:\n        print(\"No languages specified. Skipping translation step.\")\n        # creating an empty file any, to reduce special casing later\n        with open(path, 'w') as file:\n            json.dump(results, file, indent=2)\n        return\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    with open(f\"outputs/{dataset}/overview.txt\") as f:\n        overview = f.read()\n\n    UI_copy = [\"Argument\", \"Original comment\", \"Representative arguments\",\n               \"Open full-screen map\", \"Back to report\", \"Hide labels\", \"Show labels\",\n               \"Show filters\", \"Hide filters\", \"Min. votes\", \"Consensus\",\n               \"Showing\", \"arguments\", \"Reset zoom\", \"Click anywhere on the map to close this\",\n               \"Click on the dot for details\",\n               \"agree\", \"disagree\", \"Language\", \"English\", \"arguments\", \"of total\",\n               \"Overview\", \"Cluster analysis\", \"Representative comments\", \"Introduction\",\n               \"Clusters\", \"Appendix\", \"This report was generated using an AI pipeline that consists of the following steps\",\n               \"Step\", \"extraction\", \"show code\", \"hide code\", \"show prompt\", \"hide prompt\", \"embedding\",\n               \"clustering\", \"labelling\", \"takeaways\", \"overview\"]\n\n    arg_list = arguments['argument'].to_list() + \\\n        labels['label'].to_list() + \\\n        UI_copy + \\\n        languages\n\n    if 'name' in config:\n        arg_list.append(config['name'])\n    if 'question' in config:\n        arg_list.append(config['question'])\n\n    prompt_file = config.get('translation_prompt', 'default')\n    with open(f\"prompts/translation/{prompt_file}.txt\") as f:\n        prompt = f.read()\n    model = config['model']\n\n    config['translation_prompt'] = prompt\n\n    translations = [translate_lang(\n        arg_list, 10, prompt, lang, model) for lang in languages]\n\n    # handling long takeaways differently, WITHOUT batching too much\n    long_arg_list = takeaways['takeaways'].to_list()\n    long_arg_list.append(overview)\n    if 'intro' in config:\n        long_arg_list.append(config['intro'])\n\n    long_translations = [translate_lang(\n        long_arg_list, 1, prompt, lang, model) for lang in languages]\n\n    for i, id in enumerate(arg_list):\n        print('i, id', i, id)\n        results[str(id)] = list([t[i] for t in translations])\n    for i, id in enumerate(long_arg_list):\n        results[str(id)] = list([t[i] for t in long_translations])\n\n    with open(path, 'w') as file:\n        json.dump(results, file, indent=2)\n\n\ndef translate_lang(arg_list, batch_size, prompt, lang, model):\n    translations = []\n    lang_prompt = prompt.replace(\"{language}\", lang)\n    print(f\"Translating to {lang}...\")\n    for i in tqdm(range(0, len(arg_list), batch_size)):\n        batch = arg_list[i: i + batch_size]\n        translations.extend(translate_batch(batch, lang_prompt, model))\n    return translations\n\n\ndef translate_batch(batch, lang_prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = json.dumps(list(batch))\n    response = llm(messages=messages(lang_prompt, input)).content.strip()\n    if \"```\" in response:\n        response = response.split(\"```\")[1]\n    if response.startswith(\"json\"):\n        response = response[4:]\n    try:\n        parsed = [a.strip() for a in json.loads(response)]\n        if len(parsed) != len(batch):\n            print(\"Warning: batch size mismatch!\")\n            print(\"Batch len:\", len(batch))\n            print(\"Response len:\", len(parsed))\n            for i, item in enumerate(batch):\n                print(f\"Batch item {i}:\", item)\n                if (i < len(parsed)):\n                    print(\"Response:\", parsed[i])\n            if (len(batch) > 1):\n                print(\"Retrying with smaller batches...\")\n                mid = len(batch) // 2\n                return translate_batch(batch[:mid], lang_prompt, model, retries - 1) + \\\n                    translate_batch(\n                        batch[mid:], lang_prompt, model, retries - 1)\n            else:\n                print(\"Retrying batch...\")\n                return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            return parsed\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying batch...\")\n            return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            raise e\n","prompt":"/system \n\nYou are a professional translator.\nYou will receive a list of words and sentences written in Spanish or English. \nPlease return the same list, in the same order, but translated (if needed) to {language}.\nMake sure to return a valid JSON list of string of the same length as the original list."},"visualization":{"replacements":[{"replace":"Argument","by":"Argumento"},{"replace":"Original comment","by":"Comentario original"},{"replace":"Representative arguments","by":"Argumentos representativos"},{"replace":"Overview","by":"Resumen"},{"replace":"Clusters","by":"Clústeres"},{"replace":"Appendix","by":"Apéndice"},{"replace":"Introduction","by":"Introducción"},{"replace":"Step","by":"Paso"},{"replace":"Show code","by":"Mostrar código"},{"replace":"Hide code","by":"Ocultar código"},{"replace":"Show prompt","by":"Mostrar aviso"},{"replace":"Hide prompt","by":"Ocultar aviso"},{"replace":"Embedding","by":"Incrustación"},{"replace":"Clustering","by":"Agrupamiento"},{"replace":"Labelling","by":"Etiquetado"},{"replace":"Takeaways","by":"Conclusiones"},{"replace":"Overview","by":"Resumen"},{"replace":"Spanish","by":"Español"},{"replace":"English","by":"Inglés"},{"replace":"of total","by":"de total"},{"replace":"Cluster analysis","by":"Análisis de clústeres"},{"replace":"Representative comments","by":"Comentarios representativos"},{"replace":"Back to report","by":"Volver al reporte"},{"replace":"Hide Labels","by":"Ocultar etiquetas"},{"replace":"Show Labels","by":"Mostrar etiquetas"},{"replace":"Hide Filters","by":"Ocultar filtros"},{"replace":"Show Filters","by":"Mostrar filtros"},{"replace":"Open full-screen map","by":"Abrir mapa en pantalla completa"},{"replace":"This report was generated using an AI pipeline that consists of the following steps","by":"Este informe fue generado de forma automática siguiendo los siguientes pasos"}],"source_code":"\nimport subprocess\n\n\ndef visualization(config):\n    output_dir = config['output_dir']\n    with open(f\"outputs/{output_dir}/result.json\") as f:\n        result = f.read()\n\n    cwd = \"../next-app\"\n    command = f\"REPORT={output_dir} npm run build\"\n\n    try:\n        process = subprocess.Popen(command, shell=True, cwd=cwd, stdout=subprocess.PIPE,\n                                   stderr=subprocess.PIPE, universal_newlines=True)\n        while True:\n            output_line = process.stdout.readline()\n            if output_line == '' and process.poll() is not None:\n                break\n            if output_line:\n                print(output_line.strip())\n        process.wait()\n        errors = process.stderr.read()\n        if errors:\n            print(\"Errors:\")\n            print(errors)\n    except subprocess.CalledProcessError as e:\n        print(\"Error: \", e)\n"},"intro":"Este reporte fue generado de forma automática (Métodos de Aprendizaje Automático, LLMs, IA) a partir de una consulta pública realizada por el equipo de ParticipaLab.","output_dir":"participa","embedding":{"source_code":"\nfrom langchain.embeddings import OpenAIEmbeddings\nimport pandas as pd\nfrom tqdm import tqdm\n\n\ndef embedding(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/embeddings.pkl\"\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    embeddings = []\n    for i in tqdm(range(0, len(arguments), 1000)):\n        args = arguments[\"argument\"].tolist()[i: i + 1000]\n        embeds = OpenAIEmbeddings().embed_documents(args)\n        embeddings.extend(embeds)\n    df = pd.DataFrame(\n        [\n            {\"arg-id\": arguments.iloc[i][\"arg-id\"], \"embedding\": e}\n            for i, e in enumerate(embeddings)\n        ]\n    )\n    df.to_pickle(path)\n"},"labelling":{"sample_size":30,"source_code":"\"\"\"Create labels for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef labelling(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/labels.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['labelling']['sample_size']\n    prompt = config['labelling']['prompt']\n    model = config['labelling']['model']\n\n    question = config['question']\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n\n        args_ids_outside = clusters[clusters['cluster-id']\n                                    != cluster_id]['arg-id'].values\n        args_ids_outside = np.random.choice(args_ids_outside, size=min(\n            len(args_ids_outside), sample_size), replace=False)\n        args_sample_outside = arguments[arguments['arg-id']\n                                        .isin(args_ids_outside)]['argument'].values\n\n        label = generate_label(question, args_sample,\n                               args_sample_outside, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'label': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_label(question, args_sample, args_sample_outside, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    outside = '\\n * ' + '\\n * '.join(args_sample_outside)\n    inside = '\\n * ' + '\\n * '.join(args_sample)\n    input = f\"Question of the consultation:{question}\\n\\n\" + \\\n        f\"Examples of arguments OUTSIDE the cluster:\\n {outside}\" + \\\n        f\"Examples of arguments INSIDE the cluster:\\n {inside}\"\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n","prompt":"/system \n\nYou are a category labeling assistant that generates a category label \nfor a set of arguments within a broader consultation. You are given the main question \nof the consultation, list of arguments inside the cluster, and a list of arguments \noutside this cluster. You answer with a single category label that summarizes the \ncluster. \n\nYou do not include context that is already obvious from the question (for example: \nif the question of the consultation is something like \"what challenges are you facing \nin France\", there is no need to repeat \"in France\" in the cluster label).\n\nThe label must be very concise and just precise enough to capture what distinguishes \nthe cluster from the arguments found outside. \n\n/human\n\nQuestion of the consultation: \"What do you think has been the impact of the UK decision to leave the EU?\"\n\nExamples of arguments OUTSIDE the cluster of interest:\n\n * We faced limitations in educational and cultural exchange opportunities due to exclusion from the Erasmus program.\n * The UK dealt with longer travel times caused by increased border checks, affecting commuters and vacationers.\n * We saw reduced cooperation in environmental standards, hindering efforts to combat climate change.\n * I experienced challenges in patient care due to disruptions in reciprocal healthcare agreements.\n * We faced complexity in residency and citizenship applications for families due to Brexit-related changes.\n * The UK witnessed hindrance in global efforts to address research challenges due to reduced collaboration opportunities.\n * We faced limitations in creative projects due to exclusion from EU cultural funding programs.\n * The UK witnessed setbacks in charitable initiatives and community support due to the loss of EU funding.\n * We experienced challenges in cross-border dispute resolution due to weakened consumer protections.\n * The UK faced limitations in touring EU countries as professional musicians, impacting careers.\n\nExamples of arguments inside the cluster:\n\n * We experienced supply chain disruptions due to Brexit, leading to increased costs and delayed deliveries for businesses.\n * I faced market fluctuations and uncertainties in investments and retirement savings because of Brexit.\n * The UK dealt with reduced profit margins as an exporter due to new tariffs and customs procedures.\n * We lost jobs because companies relocated operations to stay within the EU market post-Brexit.\n * The UK struggled with the increased cost of living caused by skyrocketing prices of imported goods.\n * We witnessed a decline in investment in the UK tech sector, impacting innovation and job opportunities.\n * The UK saw a decline in tourism due to new visa regulations, affecting hospitality businesses.\n * I experienced reduced purchasing power and increased travel expenses due to the drop in the pound's value.\n\n/ai \n\nNegative Financial Impact\n","model":"gpt-4o-mini"},"takeaways":{"sample_size":30,"source_code":"\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef takeaways(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/takeaways.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['takeaways']['sample_size']\n    prompt = config['takeaways']['prompt']\n    model = config['takeaways']['model']\n\n    model = config.get('model_takeaways', config.get('model', 'gpt3.5-turbo'))\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n        label = generate_takeaways(args_sample, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'takeaways': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_takeaways(args_sample, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = \"\\n\".join(args_sample)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n","prompt":"/system \n\nYou are an expert research assistant working in a think tank. You will be given a list of arguments that have been made by a cluster of participants during a public consultation. You respond with one or two paragraphs summarizing your main takeaways. You are very concise and write short, snappy sentences which are easy to read. \n \n/human\n\n[\n  \"I firmly believe that gun violence constitutes a severe public health crisis in our society.\",\n  \"We need to address this issue urgently through comprehensive gun control measures.\", \n  \"I support the implementation of universal background checks for all gun buyers\",\n  \"I am in favor of banning assault weapons and high-capacity magazines.\",\n  \"I advocate for stricter regulations to prevent illegal gun trafficking.\",\n  \"Mental health evaluations should be a mandatory part of the gun purchasing process.\"\n]\n\n/ai \n\nParticipants called for comprehensive gun control, emphasizing universal background checks, assault weapon bans, curbing illegal gun trafficking, and prioritizing mental health evaluations.","model":"gpt-4o-mini"},"overview":{"source_code":"\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef overview(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/overview.txt\"\n\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n\n    prompt = config['overview']['prompt']\n    model = config['overview']['model']\n\n    ids = labels['cluster-id'].to_list()\n    takeaways.set_index('cluster-id', inplace=True)\n    labels.set_index('cluster-id', inplace=True)\n\n    input = ''\n    for i, id in enumerate(ids):\n        input += f\"# Cluster {i}/{len(ids)}: {labels.loc[id]['label']}\\n\\n\"\n        input += takeaways.loc[id]['takeaways'] + '\\n\\n'\n\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n\n    with open(path, 'w') as file:\n        file.write(response)\n","prompt":"/system \n\nYou are an expert research assistant working in a think tank. \nYour team has run a public consultation on a given topic and has \nstarted to analyze what the different cluster of options are. \nYou will now receive the list of clusters with a brief \nanalysis of each cluster. Your job is to return a short summary of what \nthe findings were. Your summary must be very concise (at most one \nparagraph, containing at most four sentences) and you must avoid platitudes. ","model":"gpt-4o-mini"},"aggregation":{"source_code":"\"\"\"Generate a convenient JSON output file.\"\"\"\n\nfrom tqdm import tqdm\nfrom typing import List\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nimport json\n\n\ndef aggregation(config):\n\n    path = f\"outputs/{config['output_dir']}/result.json\"\n\n    results = {\n        \"clusters\": [],\n        \"comments\": {},\n        \"translations\": {},\n        \"overview\": \"\",\n        \"config\": config,\n    }\n\n    arguments = pd.read_csv(f\"outputs/{config['output_dir']}/args.csv\")\n    arguments.set_index('arg-id', inplace=True)\n\n    comments = pd.read_csv(f\"inputs/{config['input']}.csv\")\n    useful_comment_ids = set(arguments['comment-id'].values)\n    for _, row in comments.iterrows():\n        id = row['comment-id']\n        if id in useful_comment_ids:\n            res = {'comment': row['comment-body']}\n            numeric_cols = ['agrees', 'disagrees']\n            string_cols = ['video', 'interview', 'timestamp']\n            for col in numeric_cols:\n                if col in row:\n                    res[col] = float(row[col])\n            for col in string_cols:\n                if col in row:\n                    res[col] = row[col]\n            results['comments'][str(id)] = res\n\n    languages = list(config.get('translation', {}).get('languages', []))\n    if len(languages) > 0:\n        with open(f\"outputs/{config['output_dir']}/translations.json\") as f:\n            translations = f.read()\n        results['translations'] = json.loads(translations)\n\n    clusters = pd.read_csv(f\"outputs/{config['output_dir']}/clusters.csv\")\n    labels = pd.read_csv(f\"outputs/{config['output_dir']}/labels.csv\")\n    takeaways = pd.read_csv(f\"outputs/{config['output_dir']}/takeaways.csv\")\n    takeaways.set_index('cluster-id', inplace=True)\n\n    with open(f\"outputs/{config['output_dir']}/overview.txt\") as f:\n        overview = f.read()\n    results['overview'] = overview\n\n    for _, row in labels.iterrows():\n        cid = row['cluster-id']\n        label = row['label']\n        arg_rows = clusters[clusters['cluster-id'] == cid]\n        arguments_in_cluster = []\n        for _, arg_row in arg_rows.iterrows():\n            arg_id = arg_row['arg-id']\n            argument = arguments.loc[arg_id]['argument']\n            comment_id = arguments.loc[arg_id]['comment-id']\n            x = float(arg_row['x'])\n            y = float(arg_row['y'])\n            p = float(arg_row['probability'])\n            obj = {\n                'arg_id': arg_id,\n                'argument': argument,\n                'comment_id': str(comment_id),\n                'x': x,\n                'y': y,\n                'p': p,\n            }\n            arguments_in_cluster.append(obj)\n        results['clusters'].append({\n            'cluster': label,\n            'cluster_id': str(cid),\n            'takeaways': takeaways.loc[cid]['takeaways'],\n            'arguments': arguments_in_cluster\n        })\n\n    with open(path, 'w') as file:\n        json.dump(results, file, indent=2)\n"},"plan":[{"step":"extraction","run":true,"reason":"not trace of previous run"},{"step":"embedding","run":true,"reason":"not trace of previous run"},{"step":"clustering","run":true,"reason":"not trace of previous run"},{"step":"labelling","run":true,"reason":"not trace of previous run"},{"step":"takeaways","run":true,"reason":"not trace of previous run"},{"step":"overview","run":true,"reason":"not trace of previous run"},{"step":"translation","run":true,"reason":"not trace of previous run"},{"step":"aggregation","run":true,"reason":"not trace of previous run"},{"step":"visualization","run":true,"reason":"not trace of previous run"}],"status":"running","start_time":"2024-11-01T08:27:24.614964","completed_jobs":[{"step":"extraction","completed":"2024-11-01T08:28:05.712563","duration":41.096918,"params":{"workers":3,"limit":100,"source_code":"import os\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\nimport concurrent.futures\n\n\ndef extraction(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/args.csv\"\n    comments = pd.read_csv(f\"inputs/{config['input']}.csv\")\n\n    model = config['extraction']['model']\n    prompt = config['extraction']['prompt']\n    workers = config['extraction']['workers']\n    limit = config['extraction']['limit']\n\n    comment_ids = (comments['comment-id'].values)[:limit]\n    comments.set_index('comment-id', inplace=True)\n    results = pd.DataFrame()\n    update_progress(config, total=len(comment_ids))\n    for i in tqdm(range(0, len(comment_ids), workers)):\n        batch = comment_ids[i: i + workers]\n        batch_inputs = [comments.loc[id]['comment-body'] for id in batch]\n        batch_results = extract_batch(batch_inputs, prompt, model, workers)\n        for comment_id, extracted_args in zip(batch, batch_results):\n            for j, arg in enumerate(extracted_args):\n                new_row = {\"arg-id\": f\"A{comment_id}_{j}\",\n                           \"comment-id\": int(comment_id), \"argument\": arg}\n                results = pd.concat(\n                    [results, pd.DataFrame([new_row])], ignore_index=True)\n        update_progress(config, incr=len(batch))\n    results.to_csv(path, index=False)\n\n\ndef extract_batch(batch, prompt, model, workers):\n    with concurrent.futures.ThreadPoolExecutor(max_workers=workers) as executor:\n        futures = [executor.submit(\n            extract_arguments, input, prompt, model) for input in list(batch)]\n        concurrent.futures.wait(futures)\n        return [future.result() for future in futures]\n\n\ndef extract_arguments(input, prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    try:\n        obj = json.loads(response)\n        # LLM sometimes returns valid JSON string\n        if isinstance(obj, str):\n            obj = [obj]\n        items = [a.strip() for a in obj]\n        items = filter(None, items)  # omit empty strings\n        return items\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Input was:\", input)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying...\")\n            return extract_arguments(input, prompt, model, retries - 1)\n        else:\n            print(\"Silently giving up on trying to generate valid list.\")\n            return []\n","prompt":"/system\n\nYou are a professional research assistant and your job is to help \nme prepare a nice and clean datasets of arguments. \n\nThe context is that we have run a public consultation on the \ntopic of artificial intelligence. I'm going to give you examples \nof arguments that were contributed by the public and I want you \nto help me make them more concise and easy to read. When really \nnecessary, you can also break it down into two separate arguments, \nbut it will often be best to return a single arguments. \n\nPlease return the result as a well-formatted JSON list of strings. \n\n/human\n\nAI technologies should be developed with a focus on reducing their own \nenvironmental impact over their lifecycle.\n\n/ai \n\n[\n  \"We should focus on reducing the environmental impact of AI technologies\"\n]\n\n/human \n\nThere should be a concerted effort to educate the public about the \ncapabilities, limitations, and ethical considerations of AI.\n\n/ai \n\n[\n  \"We should educate the public about the capabilities of AI\",\n  \"We should educate the public about the limitations and ethical considerations of AI\"\n]\n\n/human \n\nAI can optimize smart homes and buildings for energy efficiency and occupant wellbeing.\n\n/ ai \n\n[\n  \"AI can optimize smart homes and buildings for energy efficiency and occupant wellbeing.\"\n]\n\n/human \n\nAI can help optimize energy grids, reducing waste and carbon emissions.\n\n/ai \n\n[\n  \"AI could optimize energy grids to reduce waste and carbon emissions.\"\n]\n\n","model":"gpt-4o-mini"}},{"step":"embedding","completed":"2024-11-01T08:28:10.622951","duration":4.910049,"params":{"source_code":"\nfrom langchain.embeddings import OpenAIEmbeddings\nimport pandas as pd\nfrom tqdm import tqdm\n\n\ndef embedding(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/embeddings.pkl\"\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    embeddings = []\n    for i in tqdm(range(0, len(arguments), 1000)):\n        args = arguments[\"argument\"].tolist()[i: i + 1000]\n        embeds = OpenAIEmbeddings().embed_documents(args)\n        embeddings.extend(embeds)\n    df = pd.DataFrame(\n        [\n            {\"arg-id\": arguments.iloc[i][\"arg-id\"], \"embedding\": e}\n            for i, e in enumerate(embeddings)\n        ]\n    )\n    df.to_pickle(path)\n"}},{"step":"clustering","completed":"2024-11-01T08:28:20.472797","duration":9.849278,"params":{"clusters":3,"source_code":"\"\"\"Cluster the arguments using UMAP + HDBSCAN and GPT-4.\"\"\"\n\nimport pandas as pd\nimport numpy as np\nfrom importlib import import_module\n\n\ndef clustering(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/clusters.csv\"\n    arguments_df = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    arguments_array = arguments_df[\"argument\"].values\n\n    embeddings_df = pd.read_pickle(f\"outputs/{dataset}/embeddings.pkl\")\n    embeddings_array = np.asarray(embeddings_df[\"embedding\"].values.tolist())\n    clusters = config['clustering']['clusters']\n\n    result = cluster_embeddings(\n        docs=arguments_array,\n        embeddings=embeddings_array,\n        metadatas={\n            \"arg-id\": arguments_df[\"arg-id\"].values,\n            \"comment-id\": arguments_df[\"comment-id\"].values,\n        },\n        n_topics=clusters,\n    )\n    result.to_csv(path, index=False)\n\n\ndef cluster_embeddings(\n    docs,\n    embeddings,\n    metadatas,\n    min_cluster_size=2,\n    n_components=2,\n    n_topics=6,\n):\n    # (!) we import the following modules dynamically for a reason\n    # (they are slow to load and not required for all pipelines)\n    SpectralClustering = import_module('sklearn.cluster').SpectralClustering\n    stopwords = import_module('nltk.corpus').stopwords\n    HDBSCAN = import_module('hdbscan').HDBSCAN\n    UMAP = import_module('umap').UMAP\n    CountVectorizer = import_module(\n        'sklearn.feature_extraction.text').CountVectorizer\n    BERTopic = import_module('bertopic').BERTopic\n\n    umap_model = UMAP(\n        random_state=42,\n        n_components=n_components,\n    )\n    hdbscan_model = HDBSCAN(min_cluster_size=min_cluster_size)\n\n    stop = stopwords.words(\"english\")\n    vectorizer_model = CountVectorizer(stop_words=stop)\n    topic_model = BERTopic(\n        umap_model=umap_model,\n        hdbscan_model=hdbscan_model,\n        vectorizer_model=vectorizer_model,\n        verbose=True,\n    )\n\n    # Fit the topic model.\n    _, __ = topic_model.fit_transform(docs, embeddings=embeddings)\n\n    n_samples = len(embeddings)\n    n_neighbors = min(n_samples - 1, 10)\n    spectral_model = SpectralClustering(\n        n_clusters=n_topics,\n        affinity=\"nearest_neighbors\",\n        n_neighbors=n_neighbors,  # Use the modified n_neighbors\n        random_state=42\n    )\n    umap_embeds = umap_model.fit_transform(embeddings)\n    cluster_labels = spectral_model.fit_predict(umap_embeds)\n\n    result = topic_model.get_document_info(\n        docs=docs,\n        metadata={\n            **metadatas,\n            \"x\": umap_embeds[:, 0],\n            \"y\": umap_embeds[:, 1],\n        },\n    )\n\n    result.columns = [c.lower() for c in result.columns]\n    result = result[['arg-id', 'x', 'y', 'probability']]\n    result['cluster-id'] = cluster_labels\n\n    return result\n"}},{"step":"labelling","completed":"2024-11-01T08:28:22.590751","duration":2.117299,"params":{"sample_size":30,"source_code":"\"\"\"Create labels for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef labelling(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/labels.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['labelling']['sample_size']\n    prompt = config['labelling']['prompt']\n    model = config['labelling']['model']\n\n    question = config['question']\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n\n        args_ids_outside = clusters[clusters['cluster-id']\n                                    != cluster_id]['arg-id'].values\n        args_ids_outside = np.random.choice(args_ids_outside, size=min(\n            len(args_ids_outside), sample_size), replace=False)\n        args_sample_outside = arguments[arguments['arg-id']\n                                        .isin(args_ids_outside)]['argument'].values\n\n        label = generate_label(question, args_sample,\n                               args_sample_outside, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'label': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_label(question, args_sample, args_sample_outside, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    outside = '\\n * ' + '\\n * '.join(args_sample_outside)\n    inside = '\\n * ' + '\\n * '.join(args_sample)\n    input = f\"Question of the consultation:{question}\\n\\n\" + \\\n        f\"Examples of arguments OUTSIDE the cluster:\\n {outside}\" + \\\n        f\"Examples of arguments INSIDE the cluster:\\n {inside}\"\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n","prompt":"/system \n\nYou are a category labeling assistant that generates a category label \nfor a set of arguments within a broader consultation. You are given the main question \nof the consultation, list of arguments inside the cluster, and a list of arguments \noutside this cluster. You answer with a single category label that summarizes the \ncluster. \n\nYou do not include context that is already obvious from the question (for example: \nif the question of the consultation is something like \"what challenges are you facing \nin France\", there is no need to repeat \"in France\" in the cluster label).\n\nThe label must be very concise and just precise enough to capture what distinguishes \nthe cluster from the arguments found outside. \n\n/human\n\nQuestion of the consultation: \"What do you think has been the impact of the UK decision to leave the EU?\"\n\nExamples of arguments OUTSIDE the cluster of interest:\n\n * We faced limitations in educational and cultural exchange opportunities due to exclusion from the Erasmus program.\n * The UK dealt with longer travel times caused by increased border checks, affecting commuters and vacationers.\n * We saw reduced cooperation in environmental standards, hindering efforts to combat climate change.\n * I experienced challenges in patient care due to disruptions in reciprocal healthcare agreements.\n * We faced complexity in residency and citizenship applications for families due to Brexit-related changes.\n * The UK witnessed hindrance in global efforts to address research challenges due to reduced collaboration opportunities.\n * We faced limitations in creative projects due to exclusion from EU cultural funding programs.\n * The UK witnessed setbacks in charitable initiatives and community support due to the loss of EU funding.\n * We experienced challenges in cross-border dispute resolution due to weakened consumer protections.\n * The UK faced limitations in touring EU countries as professional musicians, impacting careers.\n\nExamples of arguments inside the cluster:\n\n * We experienced supply chain disruptions due to Brexit, leading to increased costs and delayed deliveries for businesses.\n * I faced market fluctuations and uncertainties in investments and retirement savings because of Brexit.\n * The UK dealt with reduced profit margins as an exporter due to new tariffs and customs procedures.\n * We lost jobs because companies relocated operations to stay within the EU market post-Brexit.\n * The UK struggled with the increased cost of living caused by skyrocketing prices of imported goods.\n * We witnessed a decline in investment in the UK tech sector, impacting innovation and job opportunities.\n * The UK saw a decline in tourism due to new visa regulations, affecting hospitality businesses.\n * I experienced reduced purchasing power and increased travel expenses due to the drop in the pound's value.\n\n/ai \n\nNegative Financial Impact\n","model":"gpt-4o-mini"}},{"step":"takeaways","completed":"2024-11-01T08:28:31.294129","duration":8.702644,"params":{"sample_size":30,"source_code":"\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef takeaways(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/takeaways.csv\"\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    clusters = pd.read_csv(f\"outputs/{dataset}/clusters.csv\")\n\n    results = pd.DataFrame()\n\n    sample_size = config['takeaways']['sample_size']\n    prompt = config['takeaways']['prompt']\n    model = config['takeaways']['model']\n\n    model = config.get('model_takeaways', config.get('model', 'gpt3.5-turbo'))\n    cluster_ids = clusters['cluster-id'].unique()\n\n    update_progress(config, total=len(cluster_ids))\n\n    for _, cluster_id in tqdm(enumerate(cluster_ids), total=len(cluster_ids)):\n        args_ids = clusters[clusters['cluster-id']\n                            == cluster_id]['arg-id'].values\n        args_ids = np.random.choice(args_ids, size=min(\n            len(args_ids), sample_size), replace=False)\n        args_sample = arguments[arguments['arg-id']\n                                .isin(args_ids)]['argument'].values\n        label = generate_takeaways(args_sample, prompt, model)\n        results = pd.concat([results, pd.DataFrame(\n            [{'cluster-id': cluster_id, 'takeaways': label}])], ignore_index=True)\n        update_progress(config, incr=1)\n\n    results.to_csv(path, index=False)\n\n\ndef generate_takeaways(args_sample, prompt, model):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = \"\\n\".join(args_sample)\n    response = llm(messages=messages(prompt, input)).content.strip()\n    return response\n","prompt":"/system \n\nYou are an expert research assistant working in a think tank. You will be given a list of arguments that have been made by a cluster of participants during a public consultation. You respond with one or two paragraphs summarizing your main takeaways. You are very concise and write short, snappy sentences which are easy to read. \n \n/human\n\n[\n  \"I firmly believe that gun violence constitutes a severe public health crisis in our society.\",\n  \"We need to address this issue urgently through comprehensive gun control measures.\", \n  \"I support the implementation of universal background checks for all gun buyers\",\n  \"I am in favor of banning assault weapons and high-capacity magazines.\",\n  \"I advocate for stricter regulations to prevent illegal gun trafficking.\",\n  \"Mental health evaluations should be a mandatory part of the gun purchasing process.\"\n]\n\n/ai \n\nParticipants called for comprehensive gun control, emphasizing universal background checks, assault weapon bans, curbing illegal gun trafficking, and prioritizing mental health evaluations.","model":"gpt-4o-mini"}},{"step":"overview","completed":"2024-11-01T08:28:33.860775","duration":2.565932,"params":{"source_code":"\"\"\"Create summaries for the clusters.\"\"\"\n\nfrom tqdm import tqdm\nimport os\nfrom typing import List\nimport numpy as np\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages, update_progress\n\n\ndef overview(config):\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/overview.txt\"\n\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n\n    prompt = config['overview']['prompt']\n    model = config['overview']['model']\n\n    ids = labels['cluster-id'].to_list()\n    takeaways.set_index('cluster-id', inplace=True)\n    labels.set_index('cluster-id', inplace=True)\n\n    input = ''\n    for i, id in enumerate(ids):\n        input += f\"# Cluster {i}/{len(ids)}: {labels.loc[id]['label']}\\n\\n\"\n        input += takeaways.loc[id]['takeaways'] + '\\n\\n'\n\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    response = llm(messages=messages(prompt, input)).content.strip()\n\n    with open(path, 'w') as file:\n        file.write(response)\n","prompt":"/system \n\nYou are an expert research assistant working in a think tank. \nYour team has run a public consultation on a given topic and has \nstarted to analyze what the different cluster of options are. \nYou will now receive the list of clusters with a brief \nanalysis of each cluster. Your job is to return a short summary of what \nthe findings were. Your summary must be very concise (at most one \nparagraph, containing at most four sentences) and you must avoid platitudes. ","model":"gpt-4o-mini"}},{"step":"translation","completed":"2024-11-01T08:28:33.863285","duration":0.001454,"params":{"model":"gpt-4o-mini","languages":[],"flags":[],"source_code":"\nimport json\nfrom tqdm import tqdm\nimport pandas as pd\nfrom langchain.chat_models import ChatOpenAI\nfrom utils import messages\nfrom langchain.schema import AIMessage\nimport pandas as pd\nimport json\nfrom tqdm import tqdm\n\n\ndef translation(config):\n\n    dataset = config['output_dir']\n    path = f\"outputs/{dataset}/translations.json\"\n    results = {}\n\n    languages = list(config.get('translation', {}).get('languages', []))\n    if len(languages) == 0:\n        print(\"No languages specified. Skipping translation step.\")\n        # creating an empty file any, to reduce special casing later\n        with open(path, 'w') as file:\n            json.dump(results, file, indent=2)\n        return\n\n    arguments = pd.read_csv(f\"outputs/{dataset}/args.csv\")\n    labels = pd.read_csv(f\"outputs/{dataset}/labels.csv\")\n    takeaways = pd.read_csv(f\"outputs/{dataset}/takeaways.csv\")\n    with open(f\"outputs/{dataset}/overview.txt\") as f:\n        overview = f.read()\n\n    UI_copy = [\"Argument\", \"Original comment\", \"Representative arguments\",\n               \"Open full-screen map\", \"Back to report\", \"Hide labels\", \"Show labels\",\n               \"Show filters\", \"Hide filters\", \"Min. votes\", \"Consensus\",\n               \"Showing\", \"arguments\", \"Reset zoom\", \"Click anywhere on the map to close this\",\n               \"Click on the dot for details\",\n               \"agree\", \"disagree\", \"Language\", \"English\", \"arguments\", \"of total\",\n               \"Overview\", \"Cluster analysis\", \"Representative comments\", \"Introduction\",\n               \"Clusters\", \"Appendix\", \"This report was generated using an AI pipeline that consists of the following steps\",\n               \"Step\", \"extraction\", \"show code\", \"hide code\", \"show prompt\", \"hide prompt\", \"embedding\",\n               \"clustering\", \"labelling\", \"takeaways\", \"overview\"]\n\n    arg_list = arguments['argument'].to_list() + \\\n        labels['label'].to_list() + \\\n        UI_copy + \\\n        languages\n\n    if 'name' in config:\n        arg_list.append(config['name'])\n    if 'question' in config:\n        arg_list.append(config['question'])\n\n    prompt_file = config.get('translation_prompt', 'default')\n    with open(f\"prompts/translation/{prompt_file}.txt\") as f:\n        prompt = f.read()\n    model = config['model']\n\n    config['translation_prompt'] = prompt\n\n    translations = [translate_lang(\n        arg_list, 10, prompt, lang, model) for lang in languages]\n\n    # handling long takeaways differently, WITHOUT batching too much\n    long_arg_list = takeaways['takeaways'].to_list()\n    long_arg_list.append(overview)\n    if 'intro' in config:\n        long_arg_list.append(config['intro'])\n\n    long_translations = [translate_lang(\n        long_arg_list, 1, prompt, lang, model) for lang in languages]\n\n    for i, id in enumerate(arg_list):\n        print('i, id', i, id)\n        results[str(id)] = list([t[i] for t in translations])\n    for i, id in enumerate(long_arg_list):\n        results[str(id)] = list([t[i] for t in long_translations])\n\n    with open(path, 'w') as file:\n        json.dump(results, file, indent=2)\n\n\ndef translate_lang(arg_list, batch_size, prompt, lang, model):\n    translations = []\n    lang_prompt = prompt.replace(\"{language}\", lang)\n    print(f\"Translating to {lang}...\")\n    for i in tqdm(range(0, len(arg_list), batch_size)):\n        batch = arg_list[i: i + batch_size]\n        translations.extend(translate_batch(batch, lang_prompt, model))\n    return translations\n\n\ndef translate_batch(batch, lang_prompt, model, retries=3):\n    llm = ChatOpenAI(model_name=model, temperature=0.0)\n    input = json.dumps(list(batch))\n    response = llm(messages=messages(lang_prompt, input)).content.strip()\n    if \"```\" in response:\n        response = response.split(\"```\")[1]\n    if response.startswith(\"json\"):\n        response = response[4:]\n    try:\n        parsed = [a.strip() for a in json.loads(response)]\n        if len(parsed) != len(batch):\n            print(\"Warning: batch size mismatch!\")\n            print(\"Batch len:\", len(batch))\n            print(\"Response len:\", len(parsed))\n            for i, item in enumerate(batch):\n                print(f\"Batch item {i}:\", item)\n                if (i < len(parsed)):\n                    print(\"Response:\", parsed[i])\n            if (len(batch) > 1):\n                print(\"Retrying with smaller batches...\")\n                mid = len(batch) // 2\n                return translate_batch(batch[:mid], lang_prompt, model, retries - 1) + \\\n                    translate_batch(\n                        batch[mid:], lang_prompt, model, retries - 1)\n            else:\n                print(\"Retrying batch...\")\n                return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            return parsed\n    except json.decoder.JSONDecodeError as e:\n        print(\"JSON error:\", e)\n        print(\"Response was:\", response)\n        if retries > 0:\n            print(\"Retrying batch...\")\n            return translate_batch(batch, lang_prompt, model, retries - 1)\n        else:\n            raise e\n","prompt":"/system \n\nYou are a professional translator.\nYou will receive a list of words and sentences written in Spanish or English. \nPlease return the same list, in the same order, but translated (if needed) to {language}.\nMake sure to return a valid JSON list of string of the same length as the original list."}}],"lock_until":"2024-11-01T08:33:33.864103","current_job":"aggregation","current_job_started":"2024-11-01T08:28:33.864092"}}},"__N_SSG":true}